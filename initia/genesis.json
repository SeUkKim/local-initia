{
  "app_name": "initiad",
  "app_version": "v0.4.2-1-g95af85d",
  "genesis_time": "2024-08-16T06:10:22.273175Z",
  "chain_id": "local-initia",
  "initial_height": 1,
  "app_hash": null,
  "app_state": {
    "06-solomachine": null,
    "07-tendermint": null,
    "auction": {
      "params": {
        "max_bundle_size": 2,
        "escrow_account_address": "lUgrolt78Xjd4S2z/yDwDpD60Ak=",
        "reserve_fee": {
          "denom": "uinit",
          "amount": "1"
        },
        "min_bid_increment": {
          "denom": "uinit",
          "amount": "1"
        },
        "front_running_protection": true,
        "proposer_fee": "0.000000000000000000"
      }
    },
    "auth": {
      "params": {
        "max_memo_characters": "256",
        "tx_sig_limit": "7",
        "tx_size_cost_per_byte": "10",
        "sig_verify_cost_ed25519": "590",
        "sig_verify_cost_secp256k1": "1000"
      },
      "accounts": [
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1s3qsmj7gv9nufhhgyrl8nkzy4h05gguwkqm7ne",
          "pub_key": null,
          "account_number": "0",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1yf7gqeq5q4z344j78gnsgs96cq0gd2wyfaxpkt",
          "pub_key": null,
          "account_number": "1",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1dxngllz07cvt0pw5kzpcyn2acec5u5fn8c2vq0",
          "pub_key": null,
          "account_number": "2",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1x9qpclnn3g9fvqvl6utrz9gcy50rnaxvy2zq6c",
          "pub_key": null,
          "account_number": "3",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init12q4jgphx3t2achvphewura9zqrc7jd48xnxf0x",
          "pub_key": null,
          "account_number": "4",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init12m4xvezz64nr0r946yncx4wf4u2h0077zllfhl",
          "pub_key": null,
          "account_number": "5",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init130kcrecn928t9usd7dd2xgzfyl5r8clgj5sv2q",
          "pub_key": null,
          "account_number": "6",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1y5nkg0hqsl8wmkdcavce9w6d326ej75yz33f4h",
          "pub_key": null,
          "account_number": "7",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1lvvc75m5489tpxwuey3spfl5v769r3z3hjvt20",
          "pub_key": null,
          "account_number": "8",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1u5xu0c0k3dmeyld3nm06ypwuvptjwpvcsvmzc6",
          "pub_key": null,
          "account_number": "9",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init175x8hrvap968cvt62kjwprd440rmje0l2t49mk",
          "pub_key": null,
          "account_number": "10",
          "sequence": "0"
        }
      ]
    },
    "authz": {
      "authorization": []
    },
    "bank": {
      "params": {
        "send_enabled": [],
        "default_send_enabled": true
      },
      "balances": [
        {
          "address": "init1yf7gqeq5q4z344j78gnsgs96cq0gd2wyfaxpkt",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1y5nkg0hqsl8wmkdcavce9w6d326ej75yz33f4h",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1x9qpclnn3g9fvqvl6utrz9gcy50rnaxvy2zq6c",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init12q4jgphx3t2achvphewura9zqrc7jd48xnxf0x",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init12m4xvezz64nr0r946yncx4wf4u2h0077zllfhl",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1dxngllz07cvt0pw5kzpcyn2acec5u5fn8c2vq0",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1s3qsmj7gv9nufhhgyrl8nkzy4h05gguwkqm7ne",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init130kcrecn928t9usd7dd2xgzfyl5r8clgj5sv2q",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1u5xu0c0k3dmeyld3nm06ypwuvptjwpvcsvmzc6",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init175x8hrvap968cvt62kjwprd440rmje0l2t49mk",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        },
        {
          "address": "init1lvvc75m5489tpxwuey3spfl5v769r3z3hjvt20",
          "coins": [
            {
              "denom": "uinit",
              "amount": "1000000000"
            }
          ]
        }
      ],
      "supply": [],
      "denom_metadata": [],
      "send_enabled": []
    },
    "capability": {
      "index": "1",
      "owners": []
    },
    "consensus": null,
    "crisis": {
      "constant_fee": {
        "denom": "uinit",
        "amount": "1000"
      }
    },
    "distribution": {
      "params": {
        "community_tax": "0.020000000000000000",
        "withdraw_addr_enabled": true,
        "reward_weights": [
          {
            "denom": "uinit",
            "weight": "1.000000000000000000"
          }
        ]
      },
      "fee_pool": {
        "community_pool": []
      },
      "delegator_withdraw_infos": [],
      "previous_proposer": "",
      "outstanding_rewards": [],
      "validator_accumulated_commissions": [],
      "validator_historical_rewards": [],
      "validator_current_rewards": [],
      "delegator_starting_infos": [],
      "validator_slash_events": []
    },
    "evidence": {
      "evidence": []
    },
    "feegrant": {
      "allowances": []
    },
    "feeibc": {
      "identified_fees": [],
      "fee_enabled_channels": [],
      "registered_payees": [],
      "registered_counterparty_payees": [],
      "forward_relayers": []
    },
    "forwarding": {
      "allowed_denoms": [
        "*"
      ],
      "num_of_accounts": {},
      "num_of_forwards": {},
      "total_forwarded": {}
    },
    "genutil": {
      "gen_txs": [
        {
          "body": {
            "messages": [
              {
                "@type": "/initia.mstaking.v1.MsgCreateValidator",
                "description": {
                  "moniker": "local-initia",
                  "identity": "",
                  "website": "",
                  "security_contact": "",
                  "details": ""
                },
                "commission": {
                  "rate": "0.100000000000000000",
                  "max_rate": "0.200000000000000000",
                  "max_change_rate": "0.010000000000000000"
                },
                "validator_address": "initvaloper1s3qsmj7gv9nufhhgyrl8nkzy4h05gguwz9z8af",
                "pubkey": {
                  "@type": "/cosmos.crypto.ed25519.PubKey",
                  "key": "TWFWcbEqa1wU7dBXArXcZX2y6jIzlewY4TdnBZ8AqQs="
                },
                "amount": [
                  {
                    "denom": "uinit",
                    "amount": "1000000000"
                  }
                ]
              }
            ],
            "memo": "c0b8965d0a7e371d4e89a237476e4ef68a459536@10.10.140.48:26656",
            "timeout_height": "0",
            "extension_options": [],
            "non_critical_extension_options": []
          },
          "auth_info": {
            "signer_infos": [
              {
                "public_key": {
                  "@type": "/cosmos.crypto.secp256k1.PubKey",
                  "key": "A22BBfzYlN57hVL6qZXm8794tXtNIb+Rqzva9jGmoxwo"
                },
                "mode_info": {
                  "single": {
                    "mode": "SIGN_MODE_DIRECT"
                  }
                },
                "sequence": "0"
              }
            ],
            "fee": {
              "amount": [],
              "gas_limit": "200000",
              "payer": "",
              "granter": ""
            },
            "tip": null
          },
          "signatures": [
            "bEg/xneFDyK8rrMybWHNvf1aEkdqKCC8d/fUa9tS1jVLKWihB1ywsWNNoxtd70VkKcd/dE3auCfvcjR8gtbfGw=="
          ]
        }
      ]
    },
    "gov": {
      "starting_proposal_id": "1",
      "deposits": [],
      "votes": [],
      "proposals": [],
      "params": {
        "min_deposit": [
          {
            "denom": "uinit",
            "amount": "10000000"
          }
        ],
        "max_deposit_period": "172800s",
        "voting_period": "172800s",
        "quorum": "0.334000000000000000",
        "threshold": "0.500000000000000000",
        "veto_threshold": "0.334000000000000000",
        "min_initial_deposit_ratio": "0.000000000000000000",
        "proposal_cancel_ratio": "0.500000000000000000",
        "proposal_cancel_dest": "",
        "expedited_voting_period": "86400s",
        "expedited_threshold": "0.667000000000000000",
        "expedited_min_deposit": [
          {
            "denom": "uinit",
            "amount": "50000000"
          }
        ],
        "burn_vote_quorum": false,
        "burn_proposal_deposit_prevote": false,
        "burn_vote_veto": true,
        "min_deposit_ratio": "0.010000000000000000",
        "emergency_min_deposit": [
          {
            "denom": "uinit",
            "amount": "100000000"
          }
        ],
        "emergency_tally_interval": "300s",
        "low_threshold_functions": [
          "0x1::vip::register_snapshot"
        ],
        "vesting": null
      },
      "constitution": ""
    },
    "group": {
      "group_seq": "0",
      "groups": [],
      "group_members": [],
      "group_policy_seq": "0",
      "group_policies": [],
      "proposal_seq": "0",
      "proposals": [],
      "votes": []
    },
    "ibc": {
      "client_genesis": {
        "clients": [],
        "clients_consensus": [],
        "clients_metadata": [],
        "params": {
          "allowed_clients": [
            "*"
          ]
        },
        "create_localhost": false,
        "next_client_sequence": "0"
      },
      "connection_genesis": {
        "connections": [],
        "client_connection_paths": [],
        "next_connection_sequence": "0",
        "params": {
          "max_expected_time_per_block": "30000000000"
        }
      },
      "channel_genesis": {
        "channels": [],
        "acknowledgements": [],
        "commitments": [],
        "receipts": [],
        "send_sequences": [],
        "recv_sequences": [],
        "ack_sequences": [],
        "next_channel_sequence": "0",
        "params": {
          "upgrade_timeout": {
            "height": {
              "revision_number": "0",
              "revision_height": "0"
            },
            "timestamp": "600000000000"
          }
        }
      }
    },
    "ibchooks": {
      "params": {
        "default_allowed": false
      },
      "acls": []
    },
    "interchainaccounts": {
      "controller_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "ports": [],
        "params": {
          "controller_enabled": true
        }
      },
      "host_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "port": "icahost",
        "params": {
          "host_enabled": true,
          "allow_messages": [
            "/cosmos.authz.v1beta1.MsgExec",
            "/cosmos.authz.v1beta1.MsgGrant",
            "/cosmos.authz.v1beta1.MsgRevoke",
            "/cosmos.bank.v1beta1.MsgSend",
            "/cosmos.bank.v1beta1.MsgMultiSend",
            "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
            "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
            "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
            "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
            "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
            "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
            "/cosmos.gov.v1.MsgVoteWeighted",
            "/cosmos.gov.v1.MsgSubmitProposal",
            "/cosmos.gov.v1.MsgDeposit",
            "/cosmos.gov.v1.MsgVote",
            "/cosmos.group.v1.MsgCreateGroup",
            "/cosmos.group.v1.MsgCreateGroupPolicy",
            "/cosmos.group.v1.MsgExec",
            "/cosmos.group.v1.MsgLeaveGroup",
            "/cosmos.group.v1.MsgSubmitProposal",
            "/cosmos.group.v1.MsgUpdateGroupAdmin",
            "/cosmos.group.v1.MsgUpdateGroupMember",
            "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
            "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
            "/cosmos.group.v1.MsgVote",
            "/cosmos.group.v1.MsgWithdrawProposal",
            "/initia.mstaking.v1.MsgEditValidator",
            "/initia.mstaking.v1.MsgDelegate",
            "/initia.mstaking.v1.MsgUndelegate",
            "/initia.mstaking.v1.MsgBeginRedelegate",
            "/initia.mstaking.v1.MsgCreateValidator",
            "/ibc.applications.transfer.v1.MsgTransfer",
            "/ibc.applications.nft_transfer.v1.MsgTransfer",
            "/initia.move.v1.MsgPublish",
            "/initia.move.v1.MsgExecute",
            "/initia.move.v1.MsgScript"
          ]
        }
      }
    },
    "intertx": null,
    "marketmap": {
      "market_map": {
        "markets": {
          "AAVE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AAVE",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aaveusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AAVEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AAVE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ADA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ADA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ADA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ADA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "adausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ADAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AEVO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AEVO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AEVO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AEVO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AGIX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AGIX",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AGIX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ALGO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ALGO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ALGO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ALGOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "APEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aptusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARB",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ARB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "arbusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARKM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARKM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARKM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARKM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ASTR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ASTR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ASTR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ASTRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ATOM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ATOM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ATOM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ATOM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ATOMUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AVAX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AVAX",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AVAX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AVAX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "avaxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AVAXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AXL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AXL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AXL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WAXL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "WAXLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BCH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BCH",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BCH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BCH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "bchusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BCHUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BLUR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BLUR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BLUR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BLUR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BLURUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BLURUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BNB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BNB",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "okx_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BNB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BONK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BONK",
                "Quote": "USD"
              },
              "decimals": "14",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BONK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BTC",
                "Quote": "USD"
              },
              "decimals": "5",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "btcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXBTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "COMP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "COMP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "COMP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "COMP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "COMPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "COMP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "CRV/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "CRV",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "CRV-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "CRV_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "CRVUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOGE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOGE",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOGE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOGE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "dogeusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XDGUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "DOTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYDX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYDX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYDX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "EOS/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "EOS",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "EOS-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "EOS_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "EOSUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ETC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "etcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETH",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XETHZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FET/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FET",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FET-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FETUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FIL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FIL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FIL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "FIL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "filusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FILUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FIL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "GRT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "GRT",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "GRT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "GRT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "GRTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "HBAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "HBAR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bitstamp_ws",
                "off_chain_ticker": "hbarusd",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "HBAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ICP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ICP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ICP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ICPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "IMX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "IMX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "IMX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "IMXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "INJ/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "INJ",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "INJ-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "INJUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JTO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JTO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "JTO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JUP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JUP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "JUP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LDO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LDO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LDO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LDOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LINK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LINK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LINK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LINKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LTC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ltcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XLTCZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MANA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MANA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MANA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MANA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MANAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MATIC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MATIC",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MATIC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MATIC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "maticusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MATICUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MKR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MKR",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MKR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MKRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NEAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NEAR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "NEAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NEAR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "nearusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NTRN/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NTRN",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "2",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NTRNUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NTRN_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "OP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "OP",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "OP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "OP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ORDI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ORDI",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ORDI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ordiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PEPE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PEPE",
                "Quote": "USD"
              },
              "decimals": "16",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PEPE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "PEPEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PYTH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PYTH",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PYTH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RNDR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RNDR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "RNDR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RNDRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RUNE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RUNE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "RUNE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RUNEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RUNE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SEI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SEI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SEI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SEI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "seiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SEI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SHIB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SHIB",
                "Quote": "USD"
              },
              "decimals": "15",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SHIB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SHIB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SHIBUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SNX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SNX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SNX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SNXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SNX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SOL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SOL",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SOL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "solusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SOLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STRK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STRK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STRKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STRK_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "STX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SUI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SUI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SUI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SUI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "suiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TIA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TIA",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "TIA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "tiausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TIAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TRX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TRX",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "TRX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "trxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TRXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "UNI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "UNI",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "UNI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "UNI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "UNIUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "USDT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "USDT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "1",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "USDT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "ETH",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "USDTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "BTC",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "USDC-USDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              }
            ]
          },
          "WLD/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WLD",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WLD_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "wldusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "WOO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WOO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WOO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XLM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XLM",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XLM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXLMZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XRP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XRP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XRP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "XRP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "xrpusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXRPZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          }
        }
      },
      "last_updated": "0",
      "params": {
        "market_authorities": [
          "init12xufazw43lanl8dkvf3l7y9zzm8n3zsw0xafeg"
        ],
        "admin": "init12xufazw43lanl8dkvf3l7y9zzm8n3zsw0xafeg"
      }
    },
    "move": {
      "params": {
        "base_denom": "uinit",
        "base_min_gas_price": "0.150000000000000000",
        "contract_shared_revenue_ratio": "0.500000000000000000",
        "allowed_publishers": []
      },
      "execution_counter": "0",
      "stdlibs": [
        "oRzrCwYAAAALAQAEAgQEAwiCAQWKATAHugHUBAiOBiAQrgbfAgqNCQsMmAnsBA2EDggPjA4GAAAACAABAwAABgABAAAHAAIAAQkCAgAACgQCAAALAAMAAAwGAAAADQACAAAOAAgAAA8AAgAAEAAJAAARAAoAABIAAgABEwICAAAUDAIAABUAAgAAFgwCAAAXAAkAABgMCQAABQAJAAAZDAkAABoACQAAGwwJAAAcAAkAAB0MCQAAHgAJAAAfDAkAAQUFAQMDAgEBAwADBQMCAwECAwEKAgYCAwMBAgMBDAEBAgEIAAIDAQEGCAADAgECB2FjY291bnQLQWNjb3VudEluZm8OYWNjb3VudF9udW1iZXIPc2VxdWVuY2VfbnVtYmVyDGFjY291bnRfdHlwZQppc19ibG9ja2VkDGFjY291bnRfaW5mbw5jcmVhdGVfYWNjb3VudAVlcnJvcg5hbHJlYWR5X2V4aXN0cxZyZXF1ZXN0X2NyZWF0ZV9hY2NvdW50FWNyZWF0ZV9hY2NvdW50X3NjcmlwdA5jcmVhdGVfYWRkcmVzcxVjcmVhdGVfb2JqZWN0X2FjY291bnQNY3JlYXRlX3NpZ25lchRjcmVhdGVfdGFibGVfYWNjb3VudAlleGlzdHNfYXQQZ2V0X2FjY291bnRfaW5mbxJnZXRfYWNjb3VudF9udW1iZXIJbm90X2ZvdW5kHGdldF9hY2NvdW50X251bWJlcl93aXRoX2luZm8TZ2V0X3NlcXVlbmNlX251bWJlch1nZXRfc2VxdWVuY2VfbnVtYmVyX3dpdGhfaW5mbw9pc19iYXNlX2FjY291bnQZaXNfYmFzZV9hY2NvdW50X3dpdGhfaW5mbxRpc19ibG9ja2VkX3dpdGhfaW5mbxFpc19tb2R1bGVfYWNjb3VudBtpc19tb2R1bGVfYWNjb3VudF93aXRoX2luZm8RaXNfb2JqZWN0X2FjY291bnQbaXNfb2JqZWN0X2FjY291bnRfd2l0aF9pbmZvEGlzX3RhYmxlX2FjY291bnQaaXNfdGFibGVfYWNjb3VudF93aXRoX2luZm8FdGFibGUGb2JqZWN0B3N0YWtpbmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0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cnMLaW5pdF9tb2R1bGUHcHVibGlzaApzaW1wbGVfbWFwBmNyZWF0ZQlTaW1wbGVNYXAMY29udGFpbnNfa2V5CmJvcnJvd19tdXQFZXZlbnQEZW1pdA9yZXF1ZXN0X3B1Ymxpc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjC6BAcBAAAAAAAAABJFVVBHUkFERV9JTU1VVEFCTEUkQ2Fubm90IHVwZ3JhZGUgYW4gaW1tdXRhYmxlIHBhY2thZ2UuAgAAAAAAAAAWRVVQR1JBREVfV0VBS0VSX1BPTElDWTJDYW5ub3QgZG93bmdyYWRlIGEgcGFja2FnZSdzIHVwZ3JhZGFiaWxpdHkgcG9saWN5LgMAAAAAAAAAG0VVUEdSQURFX1BPTElDWV9VTlNQRUNJRklFRCBVcGdyYWRlIHBvbGljeSBpcyBub3Qgc3BlY2lmaWVkLgQAAAAAAAAAEkVJTlZBTElEX0FSR1VNRU5UUyVUaGUgcHVibGlzaCByZXF1ZXN0IGFyZ3MgYXJlIGludmFsaWQuBQAAAAAAAAAXRUlOVkFMSURfQ0hBSU5fT1BFUkFUT1I5VGhlIG9wZXJhdGlvbiBpcyBleHBlY3RlZCB0byBiZSBleGVjdXRlZCBieSBjaGFpbiBzaWduZXIuBgAAAAAAAAAbRUlOVkFMSURfQUxMT1dFRF9QVUJMSVNIRVJTJ2FsbG93ZWRfcHVibGlzaGVycyBhcmd1bWVudCBpcyBpbnZhbGlkLgcAAAAAAAAAFEVEVVBMSUNBVEVfTU9EVUxFX0lEHFRoZSBtb2R1bGUgSUQgaXMgZHVwbGljYXRlZC4BFE1vZHVsZVB1Ymxpc2hlZEV2ZW50AQQAAg10b3RhbF9tb2R1bGVzAQEAEmFsbG93ZWRfcHVibGlzaGVycwEBAAACAQILAQIIAggDAwIBCAIEAgIKCAIIAgUCAgwKBQ0DAAEAAQMABQcAKwMQABQCAQAAAAgVCgA4AAQICwABCAwDBQ4OAQwECwALBDgBDAMLAwQRBRQGBgAAAAAA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CgIHCAoEY29pbg5CdXJuQ2FwYWJpbGl0eQhtZXRhZGF0YQZPYmplY3QGb2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0EENvaW5DcmVhdGVkRXZlbnQNbWV0YWRhdGFfYWRkchBGcmVlemVDYXBhYmlsaXR5DE1hbmFnaW5nUmVmcwhtaW50X3JlZgdNaW50UmVmCGJ1cm5fcmVmB0J1cm5SZWYMdHJhbnNmZXJfcmVmC1RyYW5zZmVyUmVmDk1pbnRDYXBhYmlsaXR5BG5hbWUGU3RyaW5nBnN0cmluZxBtZXRhZGF0YV9hZGRyZXNzEWFkZHJlc3NfdG9fb2JqZWN0CHRyYW5zZmVyFnByaW1hcnlfZnVuZ2libGVfc3RvcmUGc3ltYm9sCGRlY2ltYWxzB2JhbGFuY2UEYnVybg1GdW5naWJsZUFzc2V0Dm9iamVjdF9hZGRyZXNzB2RlcG9zaXQJaXNfZnJvemVuB21heGltdW0GT3B0aW9uBm9wdGlvbgRtaW50B21pbnRfdG8Mc3Vkb19kZXBvc2l0DXN1ZG9fdHJhbnNmZXIKY2hlY2tfc3VkbwZzdXBwbHkId2l0aGRyYXcFYnl0ZXMVY3JlYXRlX29iamVjdF9hZGRyZXNzCGJhbGFuY2VzBnNpZ25lcgphZGRyZXNzX29mBWVycm9yEXBlcm1pc3Npb25fZGVuaWVkEWRlbm9tX3RvX21ldGFkYXRhBmxlbmd0aApzdWJfc3RyaW5nA2hleA1kZWNvZGVfc3RyaW5nCGZyb21fYmNzCnRvX2FkZHJlc3MRZnJlZXplX2NvaW5fc3RvcmUPc2V0X2Zyb3plbl9mbGFnCmluaXRpYWxpemUiaW5pdGlhbGl6ZV9hbmRfZ2VuZXJhdGVfZXh0ZW5kX3JlZglFeHRlbmRSZWYTY3JlYXRlX25hbWVkX29iamVjdA5Db25zdHJ1Y3RvclJlZitjcmVhdGVfcHJpbWFyeV9zdG9yZV9lbmFibGVkX2Z1bmdpYmxlX2Fzc2V0EWdlbmVyYXRlX21pbnRfcmVmEWdlbmVyYXRlX2J1cm5fcmVmFWdlbmVyYXRlX3RyYW5zZmVyX3JlZg9nZW5lcmF0ZV9zaWduZXIcYWRkcmVzc19mcm9tX2NvbnN0cnVjdG9yX3JlZgVldmVudARlbWl0G29iamVj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EAIJAAkBAQgJAgkABgkBEAsLAQkABQUDAQYIBAILDAEIAQYLBQIIAQUGCxACCAEFCggJBgsQAggBBQcKCAkGBQgJCggJAgYIAwgBAQgIBgYIAwgBBQcIBAgBBwgBCmNvbGxlY3Rpb24JQnVybkV2ZW50CHRva2VuX2lkBlN0cmluZwZzdHJpbmcDbmZ0CU1pbnRFdmVudApNdXRhdG9yUmVmBHNlbGYKQ29sbGVjdGlvbgdjcmVhdG9yC2Rlc2NyaXB0aW9uBG5hbWUDdXJpBG5mdHMFVGFibGUFdGFibGUVQ3JlYXRlQ29sbGVjdGlvbkV2ZW50C0ZpeGVkU3VwcGx5DmN1cnJlbnRfc3VwcGx5Cm1heF9zdXBwbHkMdG90YWxfbWludGVkDU11dGF0aW9uRXZlbnQSbXV0YXRlZF9maWVsZF9uYW1lCW9sZF92YWx1ZQluZXdfdmFsdWULTmZ0UmVzcG9uc2UPVW5saW1pdGVkU3VwcGx5Bk9iamVjdAZvYmplY3QOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kBWNvdW50Bk9wdGlvbgZvcHRpb24Ec29tZQRub25lFGdlbmVyYXRlX211dGF0b3JfcmVmDkNvbnN0cnVjdG9yUmVmG29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZhZhc3NlcnRfY29sbGVjdGlvbl9uYW1lBmxlbmd0aAxvdXRfb2ZfcmFuZ2UEdXRmOAhpbmRleF9vZhBpbnZhbGlkX2FyZ3VtZW50GWNyZWF0ZV9jb2xsZWN0aW9uX2FkZHJlc3MWY3JlYXRlX2NvbGxlY3Rpb25fc2VlZBVjcmVhdGVfb2JqZWN0X2FkZHJlc3MFYnl0ZXMXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24HUm95YWx0eQdyb3lhbHR5E2NyZWF0ZV9uYW1lZF9vYmplY3QPZ2VuZXJhdGVfc2lnbmVyBnNpZ25lcgphZGRyZXNzX29mA25ldwdpc19zb21lDGRlc3Ryb3lfc29tZQVldmVudARlbWl0DGRlc3Ryb3lfbm9uZQdleHRyYWN0BGluaXQVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmC1RyYW5zZmVyUmVmGGRpc2FibGVfdW5nYXRlZF90cmFuc2ZlchtjcmVhdGVfdW5saW1pdGVkX2NvbGxlY3Rpb24bY3JlYXRlX3VudHJhY2tlZF9jb2xsZWN0aW9uFmRlY29tcG9zZV9uZnRfcmVzcG9uc2UQZGVjcmVtZW50X3N1cHBseQZyZW1vdmUQaW5jcmVtZW50X3N1cHBseQNhZGQEaXRlcglUYWJsZUl0ZXIHcHJlcGFyZQRuZXh0D3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKAgMCOjoKAgwLZGVzY3JpcHRpb24KAgQDdXJpFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwmQUHAQAAAAAAAAAaRUNPTExFQ1RJT05fRE9FU19OT1RfRVhJU1QdVGhlIGNvbGxlY3Rpb24gZG9lcyBub3QgZXhpc3QCAAAAAAAAABtFQ09MTEVDVElPTl9TVVBQTFlfRVhDRUVERURcVGhlIGNvbGxlY3Rpb24gaGFzIHJlYWNoZWQgaXRzIHN1cHBseSBhbmQgbm8gbW9yZSBuZnRzIGNhbiBiZSBtaW50ZWQsIHVubGVzcyBzb21lIGFyZSBidXJuZWQDAAAAAAAAABlFQ09MTEVDVElPTl9OQU1FX1RPT19MT05HLlRoZSBjb2xsZWN0aW9uIG5hbWUgaXMgb3ZlciB0aGUgbWF4aW11bSBsZW5ndGgEAAAAAAAAAA1FVVJJX1RPT19MT05HIlRoZSBVUkkgaXMgb3ZlciB0aGUgbWF4aW11bSBsZW5ndGgFAAAAAAAAABVFREVTQ1JJUFRJT05fVE9PX0xPTkcqVGhlIGRlc2NyaXB0aW9uIGlzIG92ZXIgdGhlIG1heGltdW0gbGVuZ3RoBgAAAAAAAAAaRU1BWF9TVVBQTFlfQ0FOTk9UX0JFX1pFUk8fVGhlIG1heCBzdXBwbHkgbXVzdCBiZSBwb3NpdGl2ZQcAAAAAAAAAGEVJTlZBTElEX0NPTExFQ1RJT05fTkFNRR5UaGUgY29sbGVjdGlvbiBuYW1lIGlzIGludmFsaWQECUJ1cm5FdmVudAEEAAlNaW50RXZlbnQBBAANTXV0YXRpb25FdmVudAEEABVDcmVhdGVDb2xsZWN0aW9uRXZlbnQBBAAGA3Vy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",
        "oRzrCwcAAAoLAQAOAg4WAySLAQSvAQIFsQGFBAe2Be0DCKMJIAbDCRoQ3QkxCo4KEAyeCpoIAAAABAALAA0ADgAeACYAAQMAAQMHAAIKBwEAAQMMCwAFHQgAAAkAAQABBA8CAwABARAEBQABABEGAQABABIHAQABABMIAQABABQKAQABABULAQABABYMAQABABcPAQABABgRAQABABkTAQABABoUAQABABsWAQABABwYAQABAB8ZAQABACAbAQABACEcAQABACIeAQABACMfAQABACQgAQABASUNDgABBiciDQECARYhBAYMCAELAgEIAwMAAQYMAQUBBggBAQYKAgQFCgIGCwIBCAMDCgYMCAELAgEIAwMIAQgBAwMDCAEKBQoCBgsCAQgDAwoCCgIDAwMKAgYKAgoCCgIGCwIBCAMKAgUDBgwLAgEIAwMDBQYLAgEIAwMGBgwFCAEIAQoIAQoKAgEKAgEIAQcFBQoCCgIKCgIKCgIBDgYKCAEKCgIGCggBAwMKAgoCBQcKCgIGCAEKAgMKCgIBBgYMBQgBCAEKCAEKCAEQBgoIAQoKAgYKCAEDAwoCCgIFBwoKAgYIAQoCAwoKAgoKAgoKAgEEBgwKAgoIAQoKAgUFCgIKCgIKCgIBDAYKCAEKCgIGCggBAwMFBwoKAgYIAQoCAwoKAgEEBgwKAgoIAQoIAQ4GCggBCgoCBgoIAQMDBQcKCgIGCAEKAgMKCgIKCgIKCgIBCgYMCAELAgEIBAoIAQgBCAEDAwMIAQoFCgIGCwIBCAQKCgIKAgoCAwMDCgIPBgoIAQoKAgYKCAEDAwYLAgEIBAoCBQcKCgIGCAEKAgMKCgIKAgoCCQYMCAEIAQsCAQgDAwsCAQgDAwsCAQgDAwkFCgIKAgYLAgEIAwMGCwIBCAMDBgsCAQgDAwYGCwIBCAMGCwIBCAMGCwIBCAMKAgoCBQIGDAoCAgUKAgUGDAMIAQMIAQEIAAEGCQACCAAKAgZjb3Ntb3MLVm90ZVJlcXVlc3QGX3R5cGVfBlN0cmluZwZzdHJpbmcLcHJvcG9zYWxfaWQFdm90ZXIGb3B0aW9uCG1ldGFkYXRhCGRlbGVnYXRlBk9iamVjdAZvYmplY3QITWV0YWRhdGEOZnVuZ2libGVfYXNzZXQGc2lnbmVyCmFkZHJlc3Nfb2YFYnl0ZXMRZGVsZWdh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AwEIGAELHwEEAgYIFgsfAQQCCxQBCAkLFAEIFQ0LFAEICQEIAgUFCAwIDAMDAwMIDAgMAggRCBECCxQBCBULFAEIFQEGCA0DCxQBCAkLFAEIFQMPCxQBCAkIAgUFAQEIDAgMCAwDAwMDCAwIDAMIEQgRAxADAwEIDAgMBAQIDAQIDAgMCAwIDAgMBggMBAEIHQ8IDAYIDAQECAwGCAwIDAEIDAgMCAwBCAwIDAgMAwgMDw8IBQYICQgMCAwGCBYIDAMDAQYIFgEIGQIGCAgDDgUHCBYLHwEEBAQBAwMDAwMIDAgMBQUGDAsUAQgJAwMLHwEDAwMDAw0HCBYLFAEICQsfAQQBAwMGDAsUAQgVCB4IHggMCAwIHgMLFAEICQgeCx8BAwIEBAEIGhkFBggJCxQBCBULFAEICQgCBQUBCx8BBAQEAQgMCAwHCBYDAwgMCAwDCAwIDAYIDAgMCAwFBgwLFAEICQsUAQgVAwsfAQMCBgwIHgQGDAgeCB4BBgMIDAgMCAwIDAgMBwgMCAwIDAgMCAwIDAYIDAEGCA8BBggDBQUFBQgLCAwDBgwLFAEICQgMAgcLAQIJAAkBCQABBwkBAQgcBAcICQcIDAgCCAIDCB4LHwEDCx8BAwIIHggeAgYIBggeAQgEEAUHCAkLHwEEBAcIFgMDCAwGCAwDAQgCDAYMBgwLFAEIFwUGDAsUAQgJAwsfAQMLHwEDAggJCBUGAwYMCxQBCBUIHggeBQNkZXgLTW9kdWxlU3RvcmUFcGFpcnMFVGFibGUFdGFibGUHUGFpcktleQxQYWlyUmVzcG9uc2UKcGFpcl9jb3VudA1XaXRoZHJhd0V2ZW50BmNvaW5fYQZjb2luX2IPbGlxdWlkaXR5X3Rva2VuDWNvaW5fYV9hbW91bnQNY29pbl9iX2Ftb3VudAlsaXF1aWRpdHkQQ29pbkNhcGFiaWxpdGllcwhidXJuX2NhcA5CdXJuQ2FwYWJpbGl0eQRjb2luCmZyZWV6ZV9jYXAQRnJlZXplQ2FwYWJpbGl0eQhtaW50X2NhcA5NaW50Q2FwYWJpbGl0eQZDb25maWcKZXh0ZW5kX3JlZglFeHRlbmRSZWYGb2JqZWN0B3dlaWdodHMHV2VpZ2h0cw1zd2FwX2ZlZV9yYXRlCkRlY2ltYWwxMjgKZGVjaW1hbDEyOA5Db25maWdSZXNwb25zZQ9DcmVhdGVQYWlyRXZlbnQVQ3VycmVudFdlaWdodFJlc3BvbnNlDWNvaW5fYV93ZWlnaHQNY29pbl9iX3dlaWdodBNQYWlyQnlEZW5vbVJlc3BvbnNlBlN0cmluZwZzdHJpbmcRUGFpckRlbm9tUmVzcG9uc2UMY29pbl9hX2Rlbm9tDGNvaW5fYl9kZW5vbRRQYWlyTWV0YWRhdGFSZXNwb25zZQ9jb2luX2FfbWV0YWRhdGEGT2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0D2NvaW5fYl9tZXRhZGF0YQRQb29sDGNvaW5fYV9zdG9yZQ1GdW5naWJsZVN0b3JlDGNvaW5fYl9zdG9yZRBQb29sSW5mb1Jlc3BvbnNlC3RvdGFsX3NoYXJlDFByb3ZpZGVFdmVudBdTaW5nbGVBc3NldFByb3ZpZGVFdmVudAxwcm92aWRlX2NvaW4OcHJvdmlkZV9hbW91bnQKZmVlX2Ftb3VudAlTd2FwRXZlbnQKb2ZmZXJfY29pbgtyZXR1cm5fY29pbgxvZmZlcl9hbW91bnQNcmV0dXJuX2Ftb3VudBJTd2FwRmVlVXBkYXRlRXZlbnQGV2VpZ2h0CXRpbWVzdGFtcA53ZWlnaHRzX2JlZm9yZQ13ZWlnaHRzX2FmdGVyBHN3YXANRnVuZ2libGVBc3NldAZhbW91bnQTbWV0YWRhdGFfZnJvbV9hc3NldA5vYmplY3RfYWRkcmVzcxFnZW5lcmF0ZV9wYWlyX2tleQVlcnJvchBpbnZhbGlkX2FyZ3VtZW50CXBvb2xfaW5mbw9zd2FwX3NpbXVsYXRpb24dZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcHZGVwb3NpdAh3aXRoZHJhdwVldmVudARlbWl0C2luaXRfbW9kdWxlA25ldwNwb3cDdmFsA29uZQJsbg9tdWxfZGVjaW1hbDEyOHMDYWRkA2RpdgNzdWIaY2FsY3VsYXRlX2ZlZV93aXRoX21pbmltdW0RbXVsX3U2NF93aXRoX2NlaWwWY2hlY2tfY2hhaW5fcGVybWlzc2lvbgZzaWduZXIKYWRkcmVzc19vZhFwZXJtaXNzaW9uX2RlbmllZA9jaGVja19sYnBfZW5kZWQFYmxvY2sOZ2V0X2Jsb2NrX2luZm8NaW52YWxpZF9zdGF0ZQxjb2luX2FkZHJlc3MOYXNzZXRfbWV0YWRhdGEWY3JlYXRlX2xicF9wYWlyX3NjcmlwdAtjcmVhdGVfcGFpcgZvcHRpb24Ebm9uZQZPcHRpb24EdXRmOCJpbml0aWFsaXplX2FuZF9nZW5lcmF0ZV9leHRlbmRfcmVmDHRyYW5zZmVyX3JhdxZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlFGNyZWF0ZV9wcmltYXJ5X3N0b3JlEWFkZHJlc3NfdG9fb2JqZWN0EXByb3ZpZGVfbGlxdWlkaXR5EmNyZWF0ZV9wYWlyX3NjcmlwdA5zdG9yZV9tZXRhZGF0YQ1nZXRfYWxsX3BhaXJzB2lzX3NvbWUHZXh0cmFjdARzb21lBGl0ZXIJVGFibGVJdGVyB3ByZXBhcmUEbmV4dAZib3Jyb3cWZ2V0X2FsbF9wYWlyc19ieV9kZW5vbRFkZW5vbV90b19tZXRhZGF0YRFtZXRhZGF0YV90b19kZW5vbSlnZXRfY29pbl9hX2Ftb3VudF9mcm9tX3Bvb2xfaW5mb19yZXNwb25zZR1nZXRfY29pbl9hX3dlaWdodF9mcm9tX3dlaWdodClnZXRfY29pbl9iX2Ftb3VudF9mcm9tX3Bvb2xfaW5mb19yZXNwb25zZR1nZXRfY29pbl9iX3dlaWdodF9mcm9tX3dlaWdodApnZXRfY29uZmlnE2dldF9jb25maWdfYnlfZGVub20HY29udmVydBJnZXRfY3VycmVudF93ZWlnaHQKZ2V0X3dlaWdodBtnZXRfY3VycmVudF93ZWlnaHRfYnlfZGVub20OZ2V0X3BhaXJfZGVub20RZ2V0X3BhaXJfbWV0YWRhdGEJZ2V0X3BhaXJzDWdldF9wb29sX2luZm8HYmFsYW5jZQZzdXBwbHkWZ2V0X3Bvb2xfaW5mb19ieV9kZW5vbQ5nZXRfc3BvdF9wcmljZQdtdWxfdTY0DmZyb21fcmF0aW9fdTY0F2dldF9zcG90X3ByaWNlX2J5X2Rlbm9tJmdldF9zd2FwX2ZlZV9yYXRlX2Zyb21fY29uZmlnX3Jlc3BvbnNlE2dldF9zd2FwX3NpbXVsYXRpb24cZ2V0X3N3YXBfc2ltdWxhdGlvbl9ieV9kZW5vbR1nZXRfc3dhcF9zaW11bGF0aW9uX2dpdmVuX291dBlzd2FwX3NpbXVsYXRpb25fZ2l2ZW5fb3V0JmdldF9zd2FwX3NpbXVsYXRpb25fZ2l2ZW5fb3V0X2J5X2Rlbm9tGWdldF90aW1lc3RhbXBfZnJvbV93ZWlnaHQnZ2V0X3RvdGFsX3NoYXJlX2Zyb21fcG9vbF9pbmZvX3Jlc3BvbnNlJWdldF93ZWlnaHRfYWZ0ZXJfZnJvbV9jb25maWdfcmVzcG9uc2UmZ2V0X3dlaWdodF9iZWZvcmVfZnJvbV9jb25maWdfcmVzcG9uc2UEemVybw1wb29sX21ldGFkYXRhCG11bF91MTI4B2lzX25vbmUEbWludCFwcm92aWRlX2xpcXVpZGl0eV9mcm9tX2NvaW5fc3RvcmUYcHJvdmlkZV9saXF1aWRpdHlfc2NyaXB0HnNpbmdsZV9hc3NldF9wcm92aWRlX2xpcXVpZGl0eQpmcm9tX3JhdGlvJXNpbmdsZV9hc3NldF9wcm92aWRlX2xpcXVpZGl0eV9zY3JpcHQLc3dhcF9zY3JpcHQedW5wYWNrX2N1cnJlbnRfd2VpZ2h0X3Jlc3BvbnNlFHVucGFja19wYWlyX3Jlc3BvbnNlFHVwZGF0ZV9zd2FwX2ZlZV9yYXRlCmJvcnJvd19tdXQSd2l0aGRyYXdfbGlxdWlkaXR5BGJ1cm4Zd2l0aGRyYXdfbGlxdWlkaXR5X3NjcmlwdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoCAQAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwiQwQAgAAAAAAAAAPRVpFUk9fTElRVUlESVRZH0NhbiBub3Qgd2l0aGRyYXcgemVybyBsaXF1aWRpdHkDAAAAAAAAAAtFTUlOX1JFVFVSTi5SZXR1cm4gYW1vdW50IGlzIHNtYWxsZXIgdGhhbiB0aGUgYG1pbl9yZXR1cm5gBAAAAAAAAAAORU1JTl9MSVFVSURJVFlCUmV0dXJuIGxpcXVpZGl0eSBhbW91bnQgaXMgc21hbGxlciB0aGFuIHRoZSBgbWluX2xpcXVpZGl0eV9hbW91bnRgBQAAAAAAAAANRU1JTl9XSVRIRFJBV1hSZXR1cm5pbmcgY29pbiBhbW91bnQgb2YgdGhlIHJlc3VsdCBvZiB0aGUgbGlxdWlkaXR5IHdpdGhkcmF3IGlzIHNtYWxsZXIgdGhhbiBtaW4gcmV0dXJuBgAAAAAAAAASRU9VVF9PRl9CQVNFX1JBTkdFKUJhc2UgbXVzdCBiZSBpbiB0aGUgcmFuZ2Ugb2YgMCA8IGJhc2UgPCAyBwAAAAAAAAANRVVOQVVUSE9SSVpFRBdPbmx5IGNoYWluIGNhbiBleGVjdXRlLggAAAAAAAAAG0VPVVRfT0ZfU1dBUF9GRUVfUkFURV9SQU5HRSpGZWUgcmF0ZSBtdXN0IGJlIHNtYWxsZXIgdGhhbiBtYXggZmVlIHJhdGUJAAAAAAAAABJFV0VJR0hUU19USU1FU1RBTVAnZW5kIHRpbWUgbXVzdCBiZSBsYXJnZXIgdGhhbiBzdGFydCB0aW1lCgAAAAAAAAAKRUNPSU5fVFlQRRVXcm9uZyBjb2luIHR5cGUgZ2l2ZW4LAAAAAAAAAA1FUFJJQ0VfSU1QQUNUF0V4Y2VlZCBtYXggcHJpY2UgaW1wYWN0DgAAAAAAAAAQRUxCUF9OT1RfU1RBUlRFRCRMQlAgaXMgbm90IHN0YXJ0ZWQsIGNhbiBub3Qgc3dhcCB5ZXQPAAAAAAAAAA5FTEJQX05PVF9FTkRFRCNMQlAgaXMgbm90IGVuZGVkLCBvbmx5IHN3YXAgYWxsb3dlZBAAAAAAAAAAD0VMQlBfU1RBUlRfVElNRS9MQlAgc3RhcnQgdGltZSBtdXN0IGJlIGxhcmdlciB0aGFuIGN1cnJlbnQgdGltZREAAAAAAAAADEVTVEFSVF9BRlRFUidBbGwgc3RhcnRfYWZ0ZXIgbXVzdCBiZSBwcm92aWRlZCBvciBub3QTAAAAAAAAAA9FU0FNRV9DT0lOX1RZUEUAFAAAAAAAAAAPRVpFUk9fQU1PVU5UX0lOMVplcm8gYW1vdW50IGluIHRoZSBzd2FwIHNpbXVsYXRpb24gaXMgbm90IGFsbG93ZWQGCVN3YXBFdmVudAEEAAxQcm92aWRlRXZlbnQBBAANV2l0aGRyYXdFdmVudAEEAA9DcmVhdGVQYWlyRXZl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bG9hZF9tb2R1bGVfZnJvbV9mdW5jdGlvbg5zdG9yZV9tZXRhZGF0YQhNZXRhZGF0YQ5vYmplY3RfYWRkcmVzcwVlcnJvcglub3RfZm91bmQUZGlzcGF0Y2hhYmxlX2RlcG9zaXQQZGVwb3NpdF9pbnRlcm5hbChyZWdpc3Rlcl9kZXJpdmVfc3VwcGx5X2Rpc3BhdGNoX2Z1bmN0aW9uDkNvbnN0cnVjdG9yUmVmG3JlZ2lzdGVyX2Rpc3BhdGNoX2Z1bmN0aW9ucw9nZW5lcmF0ZV9zaWduZXIVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmFXdpdGhkcmF3X3Nhbml0eV9jaGVjaxp3aXRoZHJhd19kaXNwYXRjaF9mdW5jdGlvbgdiYWxhbmNlFWRpc3BhdGNoYWJsZV93aXRoZHJhdwdhYm9ydGVkEXdpdGhkcmF3X2ludGVybmFsD2Rlcml2ZWRfYmFsYW5jZSFkZXJpdmVkX2JhbGFuY2VfZGlzcGF0Y2hfZnVuY3Rpb24cZGlzcGF0Y2hhYmxlX2Rlcml2ZWRfYmFsYW5jZQ5kZXJpdmVkX3N1cHBseSBkZXJpdmVkX3N1cHBseV9kaXNwYXRjaF9mdW5jdGlvbhtkaXNwYXRjaGFibGVfZGVyaXZlZF9zdXBwbHkGc3VwcGx5H3RyYW5zZmVyX2Fzc2VydF9taW5pbXVtX2RlcG9zaXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUTaW5pdGlhOjptZXRhZGF0YV92MLsCBAEAAAAAAAAAEEVTVE9SRV9OT1RfRk9VTkQ6VHJhbnNmZXJSZWZTdG9yZSBkb2Vzbid0IGV4aXN0IG9uIHRoZSBmdW5naWJsZSBhc3NldCB0eXBlLgIAAAAAAAAAEEVBTU9VTlRfTUlTTUFUQ0guUmVjaXBpZW50IGlzIG5vdCBnZXR0aW5nIHRoZSBndWFyYW50ZWVkIHZhbHVlOwMAAAAAAAAADkVOT1RfQUNUSVZBVEVELEZlYXR1cmUgaXMgbm90IGFjdGl2YXRlZCB5ZXQgb24gdGhlIG5ldHdvcmsuBAAAAAAAAAALRU5PVF9MT0FERUQeRGlzcGF0Y2ggdGFyZ2V0IGlzIG5vdCBsb2FkZWQuAAIOZGVyaXZlZF9zdXBwbHkBAQAPZGVyaXZlZF9iYWxhbmNlAQEAAAIBAggBAAEEAQAECQsACwELAzgADAQLAgsEOAECAgEAAQAVNAkKAAwCDAMLAgsDOAIKADgDDAQOBDgEBC8OBDgFDAUKBREHCgAMAgsBDAcLADgGDAkOCTgHDAoKCikABCAFJQsFAQYBAAAAAAAAABEKJwsKKwAQAAwLCwILBwsLCwU4CAUzDgA4CQsBEQwCDQEAAAEECwALAREOAg8BAAAbDgoACwELAgsDERAKABERDAUOBQsAERISAC0AAgEBAAEAH04JCgEMAwwECwALAwsEOAoKATgLDAUOBTgEBEcKATgMDgU4BQwGCgYRBwoBDAMKAgwICgE4BgwKDgo4BwwLCgspAAwEDAwLBAQmBSsLBgEGAQAAAAAAAAARCicLCysAEAAMDQsDCwgLDQsGOA0LATgMDAgLDAsIFwwMCwILDCUMBAwOCwQEQwVGBgIAAAAAAAAAERcnBUwOATgJCwIRGAwOCw4CGQEAACEVCgA4DgwCDgI4BAQQDgI4BQwDCgMRBwsACwM4DwwFBRMLADgMDAULBQIcAQAAIxUKADgQDAIOAjgEBBAOAjgFDAMKAxEHCwALAzgRDAUFEwsAOBIMBQsFAgsAAgAbAAIAHgACABYAAgAgAQQBACUbCgI4DAsACwELAzgACgIMAQwGCwELBjgBCwI4DAwDDAcLAwsHFwsEJgQXBRoGAgAAAAAAAAARFycCAAAA",
        "oRzrCwYAAAAKAQAEAgQIAwwtBTk9B3bFAQi7AiAQ2wKOAwrpBQwM9QXTAg3ICAQAAAAFAAEHAAADBwAABAABAAEGBgYAAAcAAQAACAIDAAAJCQIAAAoCBAAACwoCAAAMCwEAAA0MAQADCgoCCggACggBAQEBCgIBCAABCAEAAQMFAwMDAwEBAgEGCAABBggBAwoCBggABggBAwoCCgIKAgIKAgoCB2VkMjU1MTkJUHVibGljS2V5BWJ5dGVzCVNpZ25hdHVyZQxiYXRjaF92ZXJpZnkFZXJyb3IQaW52YWxpZF9hcmd1bWVudBViYXRjaF92ZXJpZnlfaW50ZXJuYWwVcHVibGljX2tleV9mcm9tX2J5dGVzE3B1YmxpY19rZXlfdG9fYnl0ZXMUc2lnbmF0dXJlX2Zyb21fYnl0ZXMSc2lnbmF0dXJlX3RvX2J5dGVzBnZlcmlmeQ92ZXJpZnlfaW50ZXJuYWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUTaW5pdGlhOjptZXRhZGF0YV92MMcCAwEAAAAAAAAAE0VfV1JPTkdfUFVCS0VZX1NJWkVTV3JvbmcgbnVtYmVyIG9mIGJ5dGVzIHdlcmUgZ2l2ZW4gYXMgaW5wdXQgd2hlbiBkZXNlcmlhbGl6aW5nIGFuIEVkMjU1MTkgcHVibGljIGtleS4CAAAAAAAAABZFX1dST05HX1NJR05BVFVSRV9TSVpFUldyb25nIG51bWJlciBvZiBieXRlcyB3ZXJlIGdpdmVuIGFzIGlucHV0IHdoZW4gZGVzZXJpYWxpemluZyBhbiBFZDI1NTE5IHNpZ25hdHVyZS4DAAAAAAAAABdFX1VOTUFUQ0hFRF9BUkdTX0xFTkdUSEFUaGUgbnVtYmVyIG9mIG1lc3NhZ2VzLCBwdWJsaWMga2V5cywgYW5kIHNpZ25hdHVyZXMgZG8gbm90IG1hdGNoLgAAAAIBAgoCAQIBAgoCAAEAAAdNDgBBAg4BQQMOAkEEBgEAAAAAAAAADAMMBAwFDAYKBgsDIQQeCgULBCEEFAUXBgMAAAAAAAAAEQEnCwUGAAAAAAAAAAAhBB0IAgVICgUGAQAAAAAAAAAhBDEK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",
        "oRzrCwYAAAAKAQAGAgYIAw4tBTsrB2bKAgiwAyAQ0AOfAgrvBQsM+gVwD+oGBAAAAAUADQABBwABBAcAAAcAAQAACAMCAAAJAAEAAAoEAQAACwMCAAAMBQYAAg4HCAAADwkGAAEQCgQAAgYIAAYIAAEBAAEGCAABBgoCAwYMCAEIAQEIAAEGDAEFAwUIAQgBAQYIAQ1mdW5jdGlvbl9pbmZvDEZ1bmN0aW9uSW5mbw5tb2R1bGVfYWRkcmVzcwttb2R1bGVfbmFtZQZTdHJpbmcGc3RyaW5nDWZ1bmN0aW9uX25hbWUhY2hlY2tfZGlzcGF0Y2hfdHlwZV9jb21wYXRpYmlsaXR5EmxvYWRfZnVuY3Rpb25faW1wbCZjaGVja19kaXNwYXRjaF90eXBlX2NvbXBhdGliaWxpdHlfaW1wbA1pc19pZGVudGlmaWVyGWxvYWRfbW9kdWxlX2Zyb21fZnVuY3Rpb24RbmV3X2Z1bmN0aW9uX2luZm8Gc2lnbmVyCmFkZHJlc3Nfb2YebmV3X2Z1bmN0aW9uX2luZm9fZnJvbV9hZGRyZXNzBWJ5dGVzDmZ1bmdpYmxlX2Fzc2V0G2Rpc3BhdGNoYWJsZV9mdW5naWJsZV9hc3NldAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3Yw2AEDAQAAAAAAAAATRUlOVkFMSURfSURFTlRJRklFUiVTdHJpbmcgaXMgbm90IGEgdmFsaWQgTW92ZSBpZGVudGlmaWVyAgAAAAAAAAARRUlOVkFMSURfRlVOQ1RJT04+RnVuY3Rpb24gc3BlY2lmaWVkIGluIHRoZSBGdW5jdGlvbkluZm8gZG9lc24ndCBleGlzdCBvbiBjaGFpbi4DAAAAAAAAAA5FTk9UX0FDVElWQVRFRCJGZWF0dXJlIGhhc24ndCBiZWVuIGFjdGl2YXRlZCB5ZXQuAAAAAgMCBQMIAQYIAQADAAADBgoBEQELAAsBEQICAgACAAMAAgABAAIABAMAAAIDCwARAQIFAQAAAgYLABEGCwELAhEHAgcDAAACEw4BEQgRAwQFBQcGAQAAAAAAAAAnDgIRCBEDBAwFDgYBAAAAAAAAACcLAAsBCwISAAIAEQASAA==",
        "",
        "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CAsCBggGCAsEBgwLBwEJAAgKBQppbml0aWFfbmZ0CUluaXRpYU5mdAhidXJuX3JlZgZPcHRpb24Gb3B0aW9uB0J1cm5SZWYDbmZ0C211dGF0b3JfcmVmCk11dGF0b3JSZWYTSW5pdGlhTmZ0Q29sbGVjdGlvbgpjb2xsZWN0aW9uE3JveWFsdHlfbXV0YXRvcl9yZWYHcm95YWx0eRNtdXRhYmxlX2Rlc2NyaXB0aW9uC211dGFibGVfdXJpF211dGFibGVfbmZ0X2Rlc2NyaXB0aW9uD211dGFibGVfbmZ0X3VyaQRidXJuBk9iamVjdAZvYmplY3QOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kBnNpZ25lcgphZGRyZXNzX29mBG93bnMRcGVybWlzc2lvbl9kZW5pZWQHaXNfc29tZQ1pbnZhbGlkX3N0YXRlB2V4dHJhY3QEbWludAZTdHJpbmcGc3RyaW5nD21pbnRfbmZ0X29iamVjdAlFeHRlbmRSZWYIdHJhbnNmZXIPc2V0X2Rlc2NyaXB0aW9uFmlzX211dGFibGVfZGVzY3JpcHRpb24HY3JlYXRvcgZib3Jyb3cHc2V0X3VyaQ5pc19tdXRhYmxlX3VyaRFjcmVhdGVfY29sbGVjdGlvbgpEZWNpbWFsMTI4CmRlY2ltYWwxMjgYY3JlYXRlX2NvbGxlY3Rpb25fb2JqZWN0BmNyZWF0ZQdSb3lhbHR5BHNvbWUXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24OQ29uc3RydWN0b3JSZWYbY3JlYXRlX3VubGltaXRlZF9jb2xsZWN0aW9uD2dlbmVyYXRlX3NpZ25lchRnZW5lcmF0ZV9tdXRhdG9yX3JlZgRub25lE2dlbmVyYXRlX2V4dGVuZF9yZWYbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmIWlzX211dGFibGVfY29sbGVjdGlvbl9kZXNjcmlwdGlvbiVpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X2Rlc2NyaXB0aW9uHWlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfdXJpHWlzX211dGFibGVfY29sbGVjdGlvbl9yb3lhbHR5GWlzX211dGFibGVfY29sbGVjdGlvbl91cmkRY29sbGVjdGlvbl9vYmplY3QKQ29sbGVjdGlvbg1taW50X2ludGVybmFsGWNyZWF0ZV9jb2xsZWN0aW9uX2FkZHJlc3MRYWRkcmVzc190b19vYmplY3QRZ2VuZXJhdGVfYnVybl9yZWYac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24Yc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzBnVwZGF0ZR1zZXRfY29sbGVjdGlvbl9yb3lhbHRpZXNfY2FsbBJzZXRfY29sbGVjdGlvbl91cmkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUTaW5pdGlhOjptZXRhZGF0YV92MI4DBgEAAAAAAAAAGkVDT0xMRUNUSU9OX0RPRVNfTk9UX0VYSVNUHVRoZSBjb2xsZWN0aW9uIGRvZXMgbm90IGV4aXN0AgAAAAAAAAATRU5GVF9ET0VTX05PVF9FWElTVBZUaGUgbmZ0IGRvZXMgbm90IGV4aXN0AwAAAAAAAAAMRU5PVF9DUkVBVE9SJlRoZSBwcm92aWRlZCBzaWduZXIgaXMgbm90IHRoZSBjcmVhdG9yBAAAAAAAAAASRUZJRUxEX05PVF9NVVRBQkxFJlRoZSBmaWVsZCBiZWluZyBjaGFuZ2VkIGlzIG5vdCBtdXRhYmxlBQAAAAAAAAAKRU5PVF9PV05FUiRUaGUgcHJvdmlkZWQgc2lnbmVyIGlzIG5vdCB0aGUgb3duZXIGAAAAAAAAAA1FQ0FOX05PVF9CVVJOHlRoZSBORlQgaXMgbm90IGFsbG93ZWQgdG8gYnVybgACDmlzX211dGFibGVfdXJpAQEAFmlzX211dGFibGVfZGVzY3JpcHRpb24BAQAAAgICCwEBCAIHCwEBCAMEAgYHCwEBCAULCwEBCAYNAQ4BDwEQAQABBAEADCsOATgAKQAEBQUKCwABBgIAAAAAAAAAEQInCgEMAgsAEQMMAwsCCwM4AQQUBRcGBQAAAAAAAAARBScOATgALAAMBA4EEAA4AgQgBSMGBgAAAAAAAAARBycLBBMAAQwFDQU4AxEJAgoBBAEBEh0KAAsBCwILAwsECwURCw4GOAQMBQEMCAsFBBoLAAwHCwgMCQ0GOAUMCgsHCwkLCjgGBRwL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",
        "",
        "oRzrCwYAAAAMAQAYAhhSA2qNAgT3AjAFpwPKBQfxCPEICOIRIAaCEicQqRL9AwqmFskBDO8X5w8N1icoAAAABwAeACEAJQApADMANQA3AD4AQQBPAAECAAEGBwAAEgIAABYHAAAXBgAAGAYAABkGAAAbCAACHQYAAyAEAgMBAAEAIgQABCQHAQAABSgHAgAAAAAAKgYAACsGAAJGAgADVgICAwEAAQAuAAEAAy8DBAIDAAAwBgEAADEICQAAMgsFAAY0DAgABzYNDgEACDgPDwADNgMOAgMACDkPDwADOhARAgMACDsPDwAAPBIOAAAOEw8AAj0UFQAJPxYFAAlAFwUACkIZBQECAEMbBQABRBwdAAJFHh8AAkcgIQACSCAVAAVJBSMCBAQHSiQFAQAFSyUFAgQEA0wFJgIDBABNKQUAAE4rBQALUAUtAANRLg8CAwADSy8FAgMAAFIyBQAAUzU2AARUBTcBAANVODkCAwADVzkOAgMAA1g5OgIDAARZPA4BAAQvPD0BAAFaMyoAAFtABQAAXEMFAAVdRA4CBAQFOkURAgQEAF5HBQAFL0QEAgQEAQIGCAgCCgIRGBciGAgZIhoCESceAh8CETAiDyMCJAIlAiYPJw8RQSsiLCIRSC4iAgUDAQgAAgMICgIGCwkCCQAJAQkAAQYJAQAEBggHBQMGCAoDBggHBggHBggKAQUBCAIFBggHCAMDCgUDAwYMBQMBBgwCBgoJAAYJAAEBAQMCBwsJAgkACQEJAAEHCQEDBggDAwMCBgsMAgUBBgoFAQYICAEMBgYMBQgBCAEKCAEKCgIGBgwFCAEIAQoIAQoIAQEIBgEJAA8FBwgHBwgKBggKBggDAwMMAQoKAgoIAQgBCAEFCggBBgYMCAEKBQMLCwEDCwsBAwEGCAEBBgoCAgYMCgIBCA8BBggPAQgIAgUBAQsMAgkACQEBBwoJAAMHCwwCCQAJAQkACQEBCwkCCQAJAQEIBBQGDAUKAggPDAsMAgUBCgUKBQMIAwUICAMBBwsMAgUBBQoFCAMLCQIDCAoIBwcGDAUFCAEIAQoIAQoKAgEIAQkGDAUFCAEIAQoIAQoKAgEKCAECCggBAQIDAwEGCwkCCQAJAQMHCwkCCQAJAQkACQEBCAUPBQcIBwUIAQgBCggBCgoCAwMCCwwCBQEDAwcLCQIDCAoICgcGDAUFCAEIAQoIAQoIAQEKAgIBCgoCAwULCwEDAgEKCAABCwsBCQAEBgsJAgkACQELCwEJAAsLAQkAAgEGCxACCQAJAQIJAAYJAQ4CCggABggHCwsBAwYLCQIDCAoGCxACAwgKBgsQAgMICgEGCAcHCggABggKAwgACggAAQYLCwEJAAEGCQAEAQMDARACAwECAQoKAgoIAQgBAwMDCgoCCggBCAEIAQUFBgwKBQMLCwEDCwsBAwEIDQ4FBwgHCwwCBQEKBQoFAwMBBwsMAgUBBQcKBQcDBwgDCAMDBwsMAgUBBQECBgsMAgkACQEGCQACBwsMAgkACQEGCQACBgUHAQQGDAUDAQEIDgcFBwgHBwgKBggKBggDAwMJBgoFAwMDBgUGCwwCBQEGBQEDCG11bHRpc2lnEFByb3Bvc2FsUmVzcG9uc2UNbXVsdGlzaWdfYWRkcgtwcm9wb3NhbF9pZA5tb2R1bGVfYWRkcmVzcwttb2R1bGVfbmFtZQZTdHJpbmcGc3RyaW5nDWZ1bmN0aW9uX25hbWUJdHlwZV9hcmdzBGFyZ3MPcHJvcG9zYWxfaGVpZ2h0EnByb3Bvc2FsX3RpbWVzdGFtcA5jb25maWdfdmVyc2lvbg55ZXNfdm90ZV9jb3VudAZzdGF0dXMHaXNfanNvbglqc29uX2FyZ3MOQ29uZmlnUmVzcG9uc2UHbWVtYmVycwl0aHJlc2hvbGQRbWF4X3ZvdGluZ19wZXJpb2QGUGVyaW9kGkNyZWF0ZU11bHRpc2lnQWNjb3VudEV2ZW50E0NyZWF0ZVByb3Bvc2FsRXZlbnQURXhlY3V0ZVByb3Bvc2FsRXZlbnQIZXhlY3V0b3IOTXVsdGlzaWdXYWxsZXQKZXh0ZW5kX3JlZglFeHRlbmRSZWYGb2JqZWN0CXByb3Bvc2FscwVUYWJsZQV0YWJsZQhQcm9wb3NhbAZoZWlnaHQGT3B0aW9uBm9wdGlvbgl0aW1lc3RhbXAFdm90ZXMJU2ltcGxlTWFwCnNpbXBsZV9tYXARVXBkYXRlQ29uZmlnRXZlbnQRVm90ZVByb3Bvc2FsRXZlbnQFdm90ZXIIdm90ZV95ZXMMZ2V0X3Byb3Bvc2FsBmJvcnJvdx1wcm9wb3NhbF90b19wcm9wb3NhbF9yZXNwb25zZQpnZXRfY29uZmlnEGV4ZWN1dGVfcHJvcG9zYWwGc2lnbmVyCmFkZHJlc3Nfb2YGdmVjdG9yCGNvbnRhaW5zBWVycm9yEXBlcm1pc3Npb25fZGVuaWVkEGludmFsaWRfYXJndW1lbnQKYm9ycm93X211dA1pbnZhbGlkX3N0YXRlE2lzX3Byb3Bvc2FsX2V4cGlyZWQdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcGY29zbW9zDG1vdmVfZXhlY3V0ZRZtb3ZlX2V4ZWN1dGVfd2l0aF9qc29uBWV2ZW50BGVtaXQXY3JlYXRlX211bHRpc2lnX2FjY291bnQFYnl0ZXMTY3JlYXRlX25hbWVkX29iamVjdA5Db25zdHJ1Y3RvclJlZhNnZW5lcmF0ZV9leHRlbmRfcmVmD2dlbmVyYXRlX3NpZ25lcgZjcmVhdGUHcmV2ZXJzZQNhZGQDbmV3D2NyZWF0ZV9wcm9wb3NhbBhjcmVhdGVfcHJvcG9zYWxfaW50ZXJuYWwFYmxvY2sOZ2V0X2Jsb2NrX2luZm8GbGVuZ3RoGWNyZWF0ZV9wcm9wb3NhbF93aXRoX2pzb24NZ2V0X3Byb3Bvc2FscwRub25lBGl0ZXIJVGFibGVJdGVyB3ByZXBhcmUEbmV4dAdpc19zb21lBHV0ZjgNdXBkYXRlX2NvbmZpZwR2b3RlDGNvbnRhaW5zX2tleQ12b3RlX3Byb3Bvc2FsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKCgIjAxBpbiB2b3RpbmcgcHJlaW9kCGV4ZWN1dGVkB2V4cGlyZWQUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjC2AwkBAAAAAAAAABJFSU5WQUxJRF9USFJFU0hPTEQAAgAAAAAAAAALRU5PVF9NRU1CRVIAAwAAAAAAAAATRU9MRF9DT05GSUdfVkVSU0lPTgAEAAAAAAAAABhFSU5WQUxJRF9QUk9QT1NBTF9TVEFUVVMABQAAAAAAAAARRVBST1BPU0FMX0VYUElSRUQABgAAAAAAAAAmRVVQREFURV9DT05GSUdfUFJPUE9TQUxfQUxSRUFEWV9FWElTVFMABwAAAAAAAAAYRVBST1BPU0FMX0FMUkVBRFlfRVhJU1RTAAgA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X3ZhbHVlA05mdApjb2xsZWN0aW9uBk9iamVjdApDb2xsZWN0aW9uC2Rlc2NyaXB0aW9uCHRva2VuX2lkA3VyaQ9OZnRJbmZvUmVzcG9uc2UGY3JlYXRlBk9wdGlvbgZvcHRpb24HUm95YWx0eQdyb3lhbHR5DkNvbnN0cnVjdG9yUmVmBnNpZ25lcgphZGRyZXNzX29mD2NyZWF0ZV9uZnRfc2VlZB1jcmVhdGVfZGVsZXRhYmxlX25hbWVkX29iamVjdA9hc3NlcnRfdG9rZW5faWQGbGVuZ3RoBWVycm9yDG91dF9vZl9yYW5nZQ9nZW5lcmF0ZV9zaWduZXIZY3JlYXRlX2NvbGxlY3Rpb25fYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdBBpbmNyZW1lbnRfc3VwcGx5B2lzX3NvbWUHZXh0cmFjdARpbml0B2NyZWF0b3IOb2JqZWN0X2FkZHJlc3MJbm90X2ZvdW5kBGJ1cm4XYWRkcmVzc19mcm9tX2RlbGV0ZV9yZWYGZGVsZXRlCWV4aXN0c19hdBBkZWNyZW1lbnRfc3VwcGx5EWdlbmVyYXRlX2J1cm5fcmVmE2dlbmVyYXRlX2RlbGV0ZV9yZWYDZ2V0D2NvbGxlY3Rpb25fbmFtZRRnZW5lcmF0ZV9tdXRhdG9yX3JlZhtvYmplY3RfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYPc2V0X2Rlc2NyaXB0aW9uBHV0ZjgFZXZlbnQEZW1pdAdzZXRfdXJpFWFkZHJlc3NfZnJvbV9idXJuX3JlZghpbmRleF9vZhBpbnZhbGlkX2FyZ3VtZW50BG5hbWURY29sbGVjdGlvbl9vYmplY3QSY3JlYXRlX25mdF9hZGRyZXNzFWNyZWF0ZV9vYmplY3RfYWRkcmVzcwVieXRlcwZ2ZWN0b3IGYXBwZW5kBmlzX25mdAhuZnRfaW5mbwluZnRfaW5mb3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoCDAtkZXNjcmlwdGlvbgoCBAN1cmkKAgMCOjoUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjCbBQgBAAAAAAAAABNFTkZUX0RPRVNfTk9UX0VYSVNUFlRo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ZXNzX2Zyb21fY29uc3RydWN0b3JfcmVmF2FkZHJlc3NfZnJvbV9kZWxldGVfcmVmF2FkZHJlc3NfZnJvbV9leHRlbmRfcmVmEWFkZHJlc3NfdG9fb2JqZWN0F2Nhbl9nZW5lcmF0ZV9kZWxldGVfcmVmB2NvbnZlcnQdY3JlYXRlX2RlbGV0YWJsZV9uYW1lZF9vYmplY3QGc2lnbmVyCmFkZHJlc3Nfb2YVY3JlYXRlX29iamVjdF9hZGRyZXNzFmNyZWF0ZV9vYmplY3RfaW50ZXJuYWwaY3JlYXRlX2d1aWRfb2JqZWN0X2FkZHJlc3MEZ3VpZAljcmVhdGVfaWQCSUQDYmNzCHRvX2J5dGVzBGhhc2gIc2hhM18yNTYIZnJvbV9iY3MKdG9fYWRkcmVzcxNjcmVhdGVfbmFtZWRfb2JqZWN0DWNyZWF0ZV9vYmplY3QTdHJhbnNhY3Rpb25fY29udGV4dBdnZW5lcmF0ZV91bmlxdWVfYWRkcmVzcwZ2ZWN0b3IGYXBwZW5kB2FjY291bnQVY3JlYXRlX29iamVjdF9hY2NvdW50DmFscmVhZHlfZXhpc3RzDWNyZWF0ZV9zaWduZXIFZXZlbnQEZW1pdBpjcmVhdGVfdXNlcl9kZXJpdmVkX29iamVjdCJjcmVhdGVfdXNlcl9kZXJpdmVkX29iamVjdF9hZGRyZXNzBmRlbGV0ZRFwZXJtaXNzaW9uX2RlbmllZBhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIXZW5hYmxlX3VuZ2F0ZWRfdHJhbnNmZXITZ2VuZXJhdGVfZGVsZXRlX3JlZhNnZW5lcmF0ZV9kZXJpdmVfcmVmE2dlbmVyYXRlX2V4dGVuZF9yZWYcZ2VuZXJhdGVfbGluZWFyX3RyYW5zZmVyX3JlZg9nZW5lcmF0ZV9zaWduZXIdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmCWlzX29iamVjdAhpc19vd25lcg5vYmplY3RfYWRkcmVzcxtvYmplY3RfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYWb2JqZWN0X2Zyb21fZGVsZXRlX3JlZgRvd25zDG91dF9vZl9yYW5nZQh0cmFuc2Zlcgx0cmFuc2Zlcl9yYXcNdHJhbnNmZXJfY2FsbB12ZXJpZnlfdW5nYXRlZF9hbmRfZGVzY2VuZGFudBJ0cmFuc2Zlcl90b19vYmplY3QRdHJhbnNmZXJfd2l0aF9yZWYYdW5nYXRlZF90cmFuc2Zlcl9hbGxvd2VkFnByaW1hcnlfZnVuZ2libGVfc3RvcmUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUTaW5pdGlhOjptZXRhZGF0YV92MPYFCQEAAAAAAAAADkVPQkpFQ1RfRVhJU1RTKEFuIG9iamVjdCBhbHJlYWR5IGV4aXN0cyBhdCB0aGlzIGFkZHJlc3MCAAAAAAAAABZFT0JKRUNUX0RPRVNfTk9UX0VYSVNUKEFuIG9iamVjdCBkb2VzIG5vdCBleGlzdCBhdCB0aGlzIGFkZHJlc3MDAAAAAAAAABVFTk9fVU5HQVRFRF9UUkFOU0ZFUlMyVGhlIG9iamVjdCBkb2VzIG5vdCBoYXZlIHVuZ2F0ZWQgdHJhbnNmZXJzIGVuYWJsZWQEAAAAAAAAABFFTk9UX09CSkVDVF9PV05FUi5UaGUgY2FsbGVyIGRvZXMgbm90IGhhdmUgb3duZXJzaGlwIHBlcm1pc3Npb25zBQAAAAAAAAAORUNBTk5PVF9ERUxFVEUmVGhlIG9iamVjdCBkb2VzIG5vdCBhbGxvdyBmb3IgZGVsZXRpb24GAAAAAAAAABBFTUFYSU1VTV9ORVNUSU5HL0V4Y2VlZHMgbWF4aW11bSBuZXN0aW5nIGZvciBhbiBvYmplY3QgdHJhbnNmZXIuBwAAAAAAAAAYRVJFU09VUkNFX0RPRVNfTk9UX0VYSVNUNFRoZSByZXNvdXJjZSBpcyBub3Qgc3RvcmVkIGF0IHRoZSBzcGVjaWZpZWQgYWRkcmVzcy4IAAAAAAAAABFFT0JKRUNUX05PVF9CVVJOVCpDYW5ub3QgcmVjbGFpbSBvYmplY3RzIHRoYXQgd2VyZW4ndCBidXJudC4JAAAAAAAAABFFVkVSU0lPTl9NSVNNQVRDSDtUaGUgdmVyc2lvbiBvZiByZWYgZG9lcyBub3QgbWF0Y2ggd2l0aCBvYmplY3QgY29yZSB2ZXJzaW9uLgILQ3JlYXRlRXZlbnQB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CwMGCAsLBQEJAAMEBQYICwsFAQgICwUBCAYDBggHBQEDBggHCwUBCQABAwYIBwsFAQgICwUBCAYDBgwLBQEJAAMBCAoDAwYMCwUBCAYDBggHBQMDBggHCwUBCQADBQYMCwUBCQAFAwMFBgwLBQEJAAsFAQkAAwMDBQsMAQUCAgoLBQEICAoDAgYLAQIJAAkBCQABBgkBAQsMAQkABAYLAQIJAAkBCwwBCQALDAEJAAIBBgsNAgkACQECCQAGCQEOAgsMAQUGCwECBQUGCw0CBQUKCwUBCAgKAwYLDQIFBQEGBQcKCwUBCAgLBQEIBgsFAQgICgsFAQgICgMBBgsFAQkAAwUGCAMBAQgOAQYIDgEIDwEGCA8CBggOCwUBCQADBwsBAgkACQEJAAkBAgcLAQIJAAkBCQABBwkBAQgEDQUBBggDCA4GCA4GCA4IDwULBQEIBgcIAAULAQIFBQcLAQIFCwECBQUHBggOCwwBBAgQCBACCBAIEAEMAQgDBAYIDgsFAQgIDAECCwUBCQALBQEIBhZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlC01vZHVsZVN0b3JlB2lzc3VlcnMFVGFibGUFdGFibGULdXNlcl9zdG9yZXMMRGVyaXZlUmVmUG9kE21ldGFkYXRhX2Rlcml2ZV9yZWYJRGVyaXZlUmVmBm9iamVjdBhQcmltYXJ5U3RvcmVDcmVhdGVkRXZlbnQKb3duZXJfYWRkcgpzdG9yZV9hZGRyDW1ldGFkYXRhX2FkZHILaW5pdF9tb2R1bGUDbmV3CHRyYW5zZmVyBk9iamVjdAZzaWduZXIKYWRkcmVzc19vZhtlbnN1cmVfcHJpbWFyeV9zdG9yZV9leGlzdHMNRnVuZ2libGVTdG9yZQ5mdW5naWJsZV9hc3NldBtkaXNwYXRjaGFibGVfZnVuZ2libGVfYXNzZXQHYWNjb3VudAlleGlzdHNfYXQOY3JlYXRlX2FjY291bnQRdHJhbnNmZXJfd2l0aF9yZWYLVHJhbnNmZXJSZWYVdHJhbnNmZXJfcmVmX21ldGFkYXRhCE1ldGFkYXRhDXByaW1hcnlfc3RvcmUHYmFsYW5jZRRwcmltYXJ5X3N0b3JlX2V4aXN0cwRidXJuB0J1cm5SZWYRYnVybl9yZWZfbWV0YWRhdGEJYnVybl9mcm9tB2RlcG9zaXQNRnVuZ2libGVBc3NldA5hc3NldF9tZXRhZGF0YRBkZXBvc2l0X3dpdGhfcmVmCWlzX2Zyb3plbgRtaW50B01pbnRSZWYRbWludF9yZWZfbWV0YWRhdGEHbWludF90bw9zZXRfZnJvemVuX2ZsYWcMc3Vkb19kZXBvc2l0DXN1ZG9fdHJhbnNmZXIId2l0aGRyYXcEemVybxF3aXRoZHJhd193aXRoX3JlZh90cmFuc2Zlcl9hc3NlcnRfbWluaW11bV9kZXBvc2l0CGJhbGFuY2VzBk9wdGlvbgZvcHRpb24GYm9ycm93BG5vbmUEaXRlcglUYWJsZUl0ZXIHcHJlcGFyZQRuZXh0EWFkZHJlc3NfdG9fb2JqZWN0FGNyZWF0ZV9wcmltYXJ5X3N0b3JlDm9iamVjdF9hZGRyZXNzGmNyZWF0ZV91c2VyX2Rlcml2ZWRfb2JqZWN0DkNvbnN0cnVjdG9yUmVmFWdlbmVyYXRlX3RyYW5zZmVyX3JlZhhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIMY3JlYXRlX3N0b3JlHGFkZHJlc3NfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYIY29udGFpbnMDYWRkCmJvcnJvd19tdXQFZXZlbnQEZW1pdCtjcmVhdGVfcHJpbWFyeV9zdG9yZV9lbmFibGVkX2Z1bmdpYmxlX2Fzc2V0BlN0cmluZwZzdHJpbmcPYWRkX2Z1bmdpYmlsaXR5G29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZg9nZW5lcmF0ZV9zaWduZXITZ2VuZXJhdGVfZGVyaXZlX3JlZgVvd25lcgZpc3N1ZXIVcHJpbWFyeV9zdG9yZV9hZGRyZXNzImNyZWF0ZV91c2VyX2Rlcml2ZWRfb2JqZWN0X2FkZHJlc3MMc3RvcmVfZXhpc3RzBGNvaW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjCPAQABGFByaW1hcnlTdG9yZUNyZWF0ZWRFdmVudAEEAAcGaXNzdWVyAQEAB2JhbGFuY2UB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bWVudAhmcm9tX2Jjcwd0b19ib29sBXRvX3U4BnRvX3UxNgZ0b191MzIGdG9fdTY0B3RvX3UxMjgHdG9fdTI1Ngp0b19hZGRyZXNzCXRvX3N0cmluZwlub3RfZm91bmQKYm9ycm93X211dARpbml0Bmxlbmd0aAZPYmplY3QGb2JqZWN0Dm9iamVjdF9hZGRyZXNzBnJlbW92ZQNhZGQMY29udGFpbnNfa2V5BGJ1cm4UZ2VuZXJhdGVfbXV0YXRvcl9yZWYGc2lnbmVyCmFkZHJlc3Nfb2YJYWRkX3R5cGVkCXR5cGVfaW5mbwl0eXBlX25hbWUDYmNzCHRvX2J5dGVzDXByZXBhcmVfaW5wdXQGY3JlYXRlBnZlY3Rvcghpc19lbXB0eQRyZWFkBmJvcnJvdwxyZWFkX2FkZHJlc3MJcmVhZF9ib29sCnJlYWRfYnl0ZXMLcmVhZF9zdHJpbmcJcmVhZF91MTI4CHJlYWRfdTE2CXJlYWRfdTI1NghyZWFkX3UzMghyZWFkX3U2NAdyZWFkX3U4DHVwZGF0ZV90eXBlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgIFBGJvb2wKAgMCdTgKAgQDdTE2CgIEA3UzMgoCBAN1NjQKAgUEdTEyOAoCBQR1MjU2CgIIB2FkZHJlc3MKAgsKdmVjdG9yPHU4PgoCFBMweDE6OnN0cmluZzo6U3RyaW5nFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwswQIAQAAAAAAAAAcRVBST1BFUlRZX01BUF9ET0VTX05PVF9FWElTVB9UaGUgcHJvcGVydHkgbWFwIGRvZXMgbm90IGV4aXN0AgAAAAAAAAAjRUtFWV9BTFJFQURZX0VYSVNUU19JTl9QUk9QRVJUWV9NQVAfVGhlIHByb3BlcnR5IGtleSBhbHJlYWR5IGV4aXN0cwMAAAAAAAAAFEVUT09fTUFOWV9QUk9QRVJUSUVTLFRoZSBudW1iZXIgb2YgcHJvcGVydGllcyBleGNlZWRzIHRoZSBtYXhpbXVtBAAAAAAAAAAZRUtFWV9WQUxVRV9DT1VOVF9NSVNNQVRDSCpQcm9wZXJ0eSBrZXkgYW5kIHZhbHVl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bm9taW5hdG9yIGNhbm5vdCBiZSAwAAAAAgECCAECAgIACAMIBQABAAEBBRMKABAAEQEMAgoCKQEECwsCLAEBBQsLABAAEQIMAw4DCwEtAQIDAQAAAQMLACkBAgQBAAAEBwsAEQUMAg4CCwEtAQIGAQAADRAOABEHEQgMAg4CEQclBAkFDAYCAAAAAAAAABEJJwsACwESAQIKAwABAQELCgApAQQEBQcGAQAAAAAAAAARCycLACwBAQIMAQAAAQQLABABFAINAQAAAQQLABACFAIOAQAAAQMLABIAAg8BAAEBFxAOADgADAEKASkBBAwLASsBFDgBDAIFDjgCDAILAgIAAAEAAQEAHwA=",
        "oRzrCwYAAAALAQAGAgYSAxhDBFsIBWNWB7kBnQMI1gQgEPYEqwEKoQYSDLMG1gINiQkGAAAABgAOAAEHAAADBwAABAcAAg0HAQAAAAUAAQABBwQEAAAIBQAAAAkABgAACgAGAAALBwAAAAwICQAADwoLAAIQDA0BAAIRAw0BAAASCA8AABMAEQAAFBIAAAgGCQYIAQkBAQoCAQgAAQIAAQMBBggAAQgBAQYIAQMKAgIGCAIBCwMBCAEEAgoCCgIBAgoCAQEJAAELAwEJAAMBCgILAwEIAQELAwEIAAMBCgILAwEIAAEIAgEGCAIJc2VjcDI1NmsxGEVDRFNBQ29tcHJlc3NlZFB1YmxpY0tleQVieXRlcxFFQ0RTQVJhd1B1YmxpY0tleQ5FQ0RTQVNpZ25hdHVyZSZlY2RzYV9jb21wcmVzc2VkX3B1YmxpY19rZXlfZnJvbV9ieXRlcwVlcnJvchBpbnZhbGlkX2FyZ3VtZW50JGVjZHNhX2NvbXByZXNzZWRfcHVibGljX2tleV90b19ieXRlcyJlY2RzYV9yYXdfcHVibGljX2tleV9mcm9tXzY0X2J5dGVzH2VjZHNhX3Jhd19wdWJsaWNfa2V5X2Zyb21fYnl0ZXMdZWNkc2FfcmF3X3B1YmxpY19rZXlfdG9fYnl0ZXMNZWNkc2FfcmVjb3ZlcgZPcHRpb24Gb3B0aW9uG3JlY292ZXJfcHVibGljX2tleV9pbnRlcm5hbARzb21lBG5vbmUYZWNkc2FfcmVjb3Zlcl9jb21wcmVzc2VkGmVjZHNhX3NpZ25hdHVyZV9mcm9tX2J5dGVzGGVjZHNhX3NpZ25hdHVyZV90b19ieXRlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwZQEBAAAAAAAAAA1FX0RFU0VSSUFMSVpFS0FuIGVycm9yIG9jY3VycmVkIHdoaWxlIGRlc2VyaWFsaXppbmcsIGZvciBleGFtcGxlIGR1ZSB0byB3cm9uZyBpbnB1dCBzaXplLgAAAAIBAgoCAQIBAgoCAgIBAgoCAAEAAAMMDgBBAgYhAAAAAAAAACEEBgUJBgEAAAAA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CAwBCAwCCwMBCAwFAgYIAQYIBAQGCAEGCAQIBAoCAwYIAQYIBAkACnNpbXBsZV9uZnQJU2ltcGxlTmZ0FHByb3BlcnR5X211dGF0b3JfcmVmCk11dGF0b3JSZWYMcHJvcGVydHlfbWFwE1NpbXBsZU5mdENvbGxlY3Rpb24WbXV0YWJsZV9uZnRfcHJvcGVydGllcwRidXJuBk9iamVjdAZvYmplY3QOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kBnNpZ25lcgphZGRyZXNzX29mBG93bnMRcGVybWlzc2lvbl9kZW5pZWQKaW5pdGlhX25mdARtaW50BlN0cmluZwZzdHJpbmcGT3B0aW9uBm9wdGlvbg9taW50X25mdF9vYmplY3QHaXNfc29tZQdleHRyYWN0CHRyYW5zZmVyD3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpEWNyZWF0ZV9jb2xsZWN0aW9uCkRlY2ltYWwxMjgKZGVjaW1hbDEyOBhjcmVhdGVfY29sbGVjdGlvbl9vYmplY3QTSW5pdGlhTmZ0Q29sbGVjdGlvbglFeHRlbmRSZWYdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcRYWRkcmVzc190b19vYmplY3QhaXNfbXV0YWJsZV9jb2xsZWN0aW9uX2Rlc2NyaXB0aW9uJWlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfZGVzY3JpcHRpb24daXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF91cmkdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3JveWFsdHkZaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3VyaQlJbml0aWFOZnQNcHJlcGFyZV9pbnB1dAtQcm9wZXJ0eU1hcARpbml0FGdlbmVyYXRlX211dGF0b3JfcmVmB2NvbnZlcnQac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24Yc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzB1JveWFsdHkHcm95YWx0eR1zZXRfY29sbGVjdGlvbl9yb3lhbHRpZXNfY2FsbAZjcmVhdGUSc2V0X2NvbGxlY3Rpb25fdXJpDGFkZF9wcm9wZXJ0eQNuZnQHY3JlYXRvchZhcmVfcHJvcGVydGllc19tdXRhYmxlA2FkZBJhZGRfdHlwZWRfcHJvcGVydHkJYWRkX3R5cGVkEWNvbGxlY3Rpb25fb2JqZWN0CkNvbGxlY3Rpb24KY29sbGVjdGlvbiRpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3Byb3BlcnRpZXMPcmVtb3ZlX3Byb3BlcnR5BnJlbW92ZQ91cGRhdGVfcHJvcGVydHkGdXBkYXRlFXVwZGF0ZV90eXBlZF9wcm9wZXJ0eQx1cGRhdGVfdHlwZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUTaW5pdGlhOjptZXRhZGF0YV92MNMCBQEAAAAAAAAAGkVDT0xMRUNUSU9OX0RPRVNfTk9UX0VYSVNUHVRoZSBjb2xsZWN0aW9uIGRvZXMgbm90IGV4aXN0AgAAAAAAAAATRU5GVF9ET0VTX05PVF9FWElTVBZUaGUgbmZ0IGRvZXMgbm90IGV4aXN0AwAAAAAAAAAMRU5PVF9DUkVBVE9SJlRoZSBwcm92aWRlZCBzaWduZXIgaXMgbm90IHRoZSBjcmVhdG9yBAAAAAAAAAAKRU5PVF9PV05FUiRUaGUgcHJvdmlkZWQgc2lnbmVyIGlzIG5vdCB0aGUgb3duZXIFAAAAAAAAABdFUFJPUEVSVElFU19OT1RfTVVUQUJMRS1UaGUgcHJvcGVydHkgbWFwIGJlaW5nIG11dGF0ZWQgaXMgbm90IG11dGFibGUAARZhcmVfcHJvcGVydGllc19tdXRhYmxlAQEAAAIBAggBAgIBBgEAAQQBAAoiDgE4ACkABAUFCgsAAQYCAAAAAAAAABECJwoBDAIKABEDDAQLAgsEOAEEFAUZCwABBgQAAAAAAAAAEQUnDgE4ACwAEwARBgsACwE4AgIIAQQAEh4KAAsBCwILAwsECwULBgsHEQkOCDgDDAoMCwsKBBsLAAwJCwsMDA0IOAQMDQsJCwwLDTgFBR0LAAECDQEEAAEFCwALAQsCOAYCDwEEAAEFCwALAQsCOAcCEQEEAAEPCwALAQsCCwMLBAsFCwYLBwsICwkLCgsLERIBAhIBAAAcHwsACwELAgsDCwQLBQsGCwcLCAsKCwsREwwMDgwRFAwNCwkSAQ4NDAAMDgsACw4tAQ4NEQM4CAwPAQsPAhYBAAABAwsAOAkCGAEAAAEDCwA4CgIaAQAAAQMLADgLAhwBAAABAwsAOAwCHgEAAAEDCwA4DQIJAQAAJCIIDAgLAAsBCwILAwsECwgRIAwJDgkRFAwKCwULBgsHESEOCgwADAsLAAsLESIOChEjEgAOCgwADAwLAAsMLQA4DgIlAQQAAQULAAsBCwI4DwInAQAAAQULAAsBCwI4EAIpAAQAKAkLAgsDESoMBAsACwELBDgRAisBBAABBQsACwELAjgSAi0BBAIAASsrCgEMBQ4FOAAMBgoGKQAECQUOCwABBgIAAAAAAAAAEQInCwU4EwsAEQMhBBUFGAYDAAAAAAAAABEFJwsGKwAMBwsBOBQEHwUkCwcBBgUAAAAAAAAAEQUnCwcQAAsCCwMLBBEwAjEBBAIAASsqCgEMBA4EOAAMBQoFKQAECQUOCwABBgIAAAAAAAAAEQInCwQ4EwsAEQMhBBUFGAYDAAAAAAAAABEFJwsFKwAMBgsBOBQEHwUkCwYBBgUAAAAAAAAAEQUnCwYQAAsCCwM4FQIvAQABATESCwA4FgwBDgE4FwwCCgIpAQQKBQ0GAQAAAAAAAAARAicLAisBEAEUAjQBAAEBBxELAAwBDgE4AAwCCgIpAQQJBQwGAQAAAAAAAAARAicLAisBEAEUAjUBBAIAASspCgEMAw4DOAAMBAoEKQAECQUOCwABBgIAAAAAAAAAEQInCwM4EwsAEQMhBBUFGAYDAAAAAAAAABEFJwsEKwAMBQsBOBQEHwUkCwUBBgUAAAAAAAAAEQUnCwUQAA4CETYCNwEEAgABKysKAQwFDgU4AAwGCgYpAAQJBQ4LAAEGAgAAAAAAAAARAicLBTgTCwARAyEEFQUYBgMAAAAAAAAAEQUnCwYrAAwHCwE4FAQfBSQLBwEGBQAAAAAAAAARBScLBxAADgILAwsEETgCOQEEAgABKyoKAQwEDgQ4AAwFCgUpAAQJBQ4LAAEGAgAAAAAAAAARAicLBDgTCwARAyEEFQUYBgMAAAAAAAAAEQUnCwUrAAwGCwE4FAQfBSQLBgEGBQAAAAAAAAARBScLBhAADgILAzgYAgAAAQAA",
        "oRzrCwYAAAALAQAWAhZIA17uAgTMAzwFiATUAwfcB7ALCIwTIBCsE+MDCo8XJwy2F4sPDcEmFAAAAAQABgAIAAoADAAVABgAGwAgACcAAQgAAQMHAQAAAgUGAAMFBgAACQgABAUGAAUFBgAGFAcABxcHAQABCiYHAAUqCwAHLQIABzIGAAQ7CAADQAoAB1UGAAdXAgAAEwABAAAWAAIAABkDAQEIABoFBgEICBwHBwAHHQgJAQgIHgcHAAIfBQkBCAkhCgkAASIMDQEAAhkOAQAAIwMBAQgAJAUGAQgCIw4BAAAlEAEAACgQEQAFKRITAAErBBQBAAQsFRYABy4XGAAELxcZAAEwARQBAAcxFxoABS8aGwAHMxcFAQgANAUGAQgANQUGAQgANgUGAQgANwUGAQgBOAwGAQAAOQUGAQgCOgUfAQgAPCEWAAIpIhYABD0jCQAHPgkFAQgCLxcLAAMvCiQAAz8lJgADQScBAABCAwEBCAQfBQkBCAQZKQEAAEMrAQEIBUQsAQAARS0BAQgARgMBAQgEIykBAABHLgEBCABIBQYBCANJLwEAAEoxAQIIAgNLMwEBAgBMBQYBCABNAwEBCANONQEAAE8uAQEIA0Q2AQAAUDEBAggCA1E3AQECAFIFBgEIAFMFBgEIB1QXOAAHVjk6AAdYOwEAB1k5AQADBAUEBwQJCwwEERMRGRUZERsVGxgcHRsfBBogGyAVEyMcBRwRCxULKQQJGQkbKwQxBDQyBSA7MjwgGDwJBgwIBwgHCAcIBwoIBwoIBwoKAgUAAQsIAQgAAwYMCwgBCQAIBwEJAAELCAEJAAEBAQMBBgsIAQkAAQUBBgwBCAIBBgsBAQkAAQYJAAIGCAIIBwMLCAEJAAsIAQkABQ0GDAgHAwgHCAcBAQEBAQEBCAkBCwgBCAQCCAkFAQgKAQsBAQkABgYMCAcDCAcLAQEICggHAQgLAQYICwEMAQgFAQgMAQgGAQgECQYMBQsBAQgKCAsMAQsBAQgFCwEBCAYIBAILCAEJAAUBCwgBCA0BCA0IBgwIBwgHCAcIBwoIBwoIBwoKAgYGDAgHCAcIBwsBAQgKCAcCBQYIBwEIAwMKCAcKCAcKCgIBCA4CBgwIDhAGDAgHCwEBCAoICwwMBQYIBwsIAQgEBggEAQsBAQgCCAMIAAgOCAsCBggFCAcDCwgBCQAFBggEAwYMCwgBCQAICgIGCAYICgQGDAsIAQkACAkFBQYMCwgBCQAIBwgHCgIEBggDCAcIBwoCAwsIAQkABQYIAAQGDAsIAQkACAcJAQEJAQMGCAMIBwkAAgsIAQgNBQIGCAMGCAcEBggDBggHCAcKAgMGCAMGCAcJAAEIDwEGCA8BCBACCBAFAQgAAggLCA8Qc291bF9ib3VuZF90b2tlbg5Tb3VsQm91bmRUb2tlbgttdXRhdG9yX3JlZgZPcHRpb24Gb3B0aW9uCk11dGF0b3JSZWYDbmZ0FHByb3BlcnR5X211dGF0b3JfcmVmDHByb3BlcnR5X21hcBhTb3VsQm91bmRUb2tlbkNvbGxlY3Rpb24KY29sbGVjdGlvbhNyb3lhbHR5X211dGF0b3JfcmVmB3JveWFsdHkTbXV0YWJsZV9kZXNjcmlwdGlvbgttdXRhYmxlX3VyaRdtdXRhYmxlX25mdF9kZXNjcmlwdGlvbhBtdXRhYmxlX25mdF9uYW1lFm11dGFibGVfbmZ0X3Byb3BlcnRpZXMPbXV0YWJsZV9uZnRfdXJpBG1pbnQGU3RyaW5nBnN0cmluZxxtaW50X3NvdWxfYm91bmRfdG9rZW5fb2JqZWN0Bk9iamVjdAZvYmplY3QPc2V0X2Rlc2NyaXB0aW9uFmlzX211dGFibGVfZGVzY3JpcHRpb24FZXJyb3IRcGVybWlzc2lvbl9kZW5pZWQOb2JqZWN0X2FkZHJlc3MJbm90X2ZvdW5kB2NyZWF0b3IGc2lnbmVyCmFkZHJlc3Nfb2YGYm9ycm93B3NldF91cmkOaXNfbXV0YWJsZV91cmkRY3JlYXRlX2NvbGxlY3Rpb24KRGVjaW1hbDEyOApkZWNpbWFsMTI4GGNyZWF0ZV9jb2xsZWN0aW9uX29iamVjdAZjcmVhdGUHUm95YWx0eQRzb21lF2NyZWF0ZV9maXhlZF9jb2xsZWN0aW9uDkNvbnN0cnVjdG9yUmVmD2dlbmVyYXRlX3NpZ25lchRnZW5lcmF0ZV9tdXRhdG9yX3JlZgRub25lE2dlbmVyYXRlX2V4dGVuZF9yZWYJRXh0ZW5kUmVmG29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZiFpc19tdXRhYmxlX2NvbGxlY3Rpb25fZGVzY3JpcHRpb24laXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF9kZXNjcmlwdGlvbh1pc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3VyaR1pc19tdXRhYmxlX2NvbGxlY3Rpb25fcm95YWx0eQdpc19zb21lGWlzX211dGFibGVfY29sbGVjdGlvbl91cmkRY29sbGVjdGlvbl9vYmplY3QKQ29sbGVjdGlvbg1taW50X2ludGVybmFsGWNyZWF0ZV9jb2xsZWN0aW9uX2FkZHJlc3MRYWRkcmVzc190b19vYmplY3QNcHJlcGFyZV9pbnB1dAtQcm9wZXJ0eU1hcARpbml0GnNldF9jb2xsZWN0aW9uX2Rlc2NyaXB0aW9uGHNldF9jb2xsZWN0aW9uX3JveWFsdGllcwZ1cGRhdGUdc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzX2NhbGwSc2V0X2NvbGxlY3Rpb25fdXJpDGFkZF9wcm9wZXJ0eRZhcmVfcHJvcGVydGllc19tdXRhYmxlA2FkZBJhZGRfdHlwZWRfcHJvcGVydHkJYWRkX3R5cGVkJGlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfcHJvcGVydGllcw9yZW1vdmVfcHJvcGVydHkGcmVtb3ZlD3VwZGF0ZV9wcm9wZXJ0eRV1cGRhdGVfdHlwZWRfcHJvcGVydHkMdXBkYXRlX3R5cGVkHmlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfbmFtZQ9pc19tdXRhYmxlX25hbWUVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmC1RyYW5zZmVyUmVmHGdlbmVyYXRlX2xpbmVhcl90cmFuc2Zlcl9yZWYRTGluZWFyVHJhbnNmZXJSZWYRdHJhbnNmZXJfd2l0aF9yZWYYZGlzYWJsZV91bmdhdGVkX3RyYW5zZmVyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjCcAwUBAAAAAAAAABpFQ09MTEVDVElPTl9ET0VTX05PVF9FWElTVB1UaGUgY29sbGVjdGlvbiBkb2VzIG5vdCBleGlzdAIAAAAAAAAAE0VORlRfRE9FU19OT1RfRVhJU1QWVGhl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",
        "",
        "",
        "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ADcCFAIWAQAAIR4OATgMBAoNATgNDAQOBDgODAUFDEAfAAAAAAAAAAAMBQ4COAwEFg0COA0MBg4GOA4MBwUYQB8AAAAAAAAAAAwHCwALBQsHCwM4DwIbAQAAIR4OATgMBAoNATgNDAQOBDgODAUFDEAfAAAAAAAAAAAMBQ4COAwEFg0COA0MBg4GOA4MBwUYQB8AAAAAAAAAAAwHCwALBQsHCwM4EAISAAIAGgACABwAAgAdAQAAAwQLADgRNwACHgACAB8AAgAgAQAAAwQLADgSNgACIQEAAAMDCwA4EwIiAAIAIwACACQBAAADAwsAOBQCDQACACUBAAAoFAoALgoBOAcDDAoBDAMLAAsDCwI4CgUTCwALATgLDAQLAgsEFQIAAAEBAQAABgELAgsA",
        "oRzrCwcAAAoIAQAIAwhEBEwIBVQaB26MAQj6ASAQmgIxDMsCZgAAAAIABAALAAEAAQABAQMDBAEAAQIFAAEAAQAGAAUAAQIHAAUAAQAIAAYAAQIJAAYAAQAKAQAAAQMMBwABAAEADQUAAAEADgYAAAEBAggBCAUIBgEKAgEEAQIBBwoJAAABDwEDAQYJAAIKAgoCCXRhYmxlX2tleQtkZWNvZGVfdTEyOAZ2ZWN0b3IHcmV2ZXJzZQhmcm9tX2Jjcwd0b191MTI4C2RlY29kZV91MjU2B3RvX3UyNTYKZGVjb2RlX3U2NAZ0b191NjQLZW5jb2RlX3UxMjgDYmNzCHRvX2J5dGVzC2VuY29kZV91MjU2CmVuY29kZV91NjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YRsBDDIuMC11bnN0YWJsZQwyLjAtdW5zdGFibGUAAQAABAUNADgACwARAgIDAQAABAUNADgACwARBAIFAQAABAUNADgACwARBgIHAQAACAcOADgBDAENATgACwECCQEAAAgHDgA4AgwBDQE4AAsBAgoBAAAIBw4AOAMMAQ0BOAALAQIA",
        "oRzrCwYAAAAHAQAEAwQPBRMGBxk8CFUgEHXxAQzmAiEAAAADAAEAAQAAAgABAAEEAAIAAAEDAgMDCXRpbWVzdGFtcBBub3dfbWljcm9zZWNvbmRzC25vd19zZWNvbmRzBWJsb2NrDmdldF9ibG9ja19pbmZvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjCqAQIBAAAAAAAAAA5FTk9UX09QRVJBVElORy9UaGUgYmxvY2tjaGFpbiBpcyBub3QgaW4gYW4gb3BlcmF0aW5nIHN0YXRlIHlldAIAAAAAAAAAEkVJTlZBTElEX1RJTUVTVEFNUCFBbiBpbnZhbGlkIHRpbWVzdGFtcCB3YXMgcHJvdmlkZWQAAgtub3dfc2Vjb25kcwEBABBub3dfbWljcm9zZWNvbmRzAQEAAAEAAAAEEQEGQEIPAAAAAAAYAgEBAAABBRECDAABCwACAA==",
        "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",
        "",
        "oRzrCwYAAAANAQAQAhAYAyiFAQStAQgFtQGXAQfMAuwFCLgIIAbYCCcQ/wi6Awq5DCgM4QzSBA2zEQgPuxECAAAABQAOABAAGAAaABwALQABCAABBAcAAAgCAAAJBgAEJwIABCkGAAANAAEAAg8AAgADEQMDAAASBAEAARMEBQABFAEGAAMVAwMAABYHAgAAFwcIAAQZCQIABRsLCAEABh0NAQEAAB4HBgAAHwcCAAAgBw8AAyEDAwAAIgcRAAAjEgEAACQTAQADJQMDAAQmFBUABCgWFwAEKhgBAAQrFhkAACwbAQAHLh0BAQIKAgsMCgMZHAEGDAABBQEDAQYIAQEPAQgBAgUDAQoCAgYFCgIDBQYFCgIBBgkAAQICBwoJAAoJAAIKAgoCAQgCAQYIAAEBAwYIAQYIAQYIAQcGDAUDAwgBCAEIAQIGDAoCAQgEAQYIBAEIBQEGCAUBDAkGDAUGBQoCCgIIBAgFDAgABAYMAwMIAQEIAwEJAAoFBwgAAw8PDwEPBwgBBwMMdmlwX29wZXJhdG9yDU9wZXJhdG9yU3RvcmUSbGFzdF9jaGFuZ2VkX3N0YWdlE2NvbW1pc3Npb25fbWF4X3JhdGUKRGVjaW1hbDI1NgpkZWNpbWFsMjU2GmNvbW1pc3Npb25fbWF4X2NoYW5nZV9yYXRlD2NvbW1pc3Npb25fcmF0ZRVPcGVyYXRvclN0b3JlUmVzcG9uc2UVVXBkYXRlQ29tbWlzc2lvbkV2ZW50CG9wZXJhdG9yCWJyaWRnZV9pZAVzdGFnZRZjaGVja19jaGFpbl9wZXJtaXNzaW9uBnNpZ25lcgphZGRyZXNzX29mBWVycm9yEXBlcm1pc3Npb25fZGVuaWVkEGNoZWNrX3ZhbGlkX3JhdGUDdmFsA29uZRBpbnZhbGlkX2FyZ3VtZW50HWNyZWF0ZV9vcGVyYXRvcl9zdG9yZV9hZGRyZXNzHGdlbmVyYXRlX29wZXJhdG9yX3N0b3JlX3NlZWQGb2JqZWN0FWNyZWF0ZV9vYmplY3RfYWRkcmVzcwNiY3MIdG9fYnl0ZXMGdmVjdG9yBmFwcGVuZBdnZXRfb3BlcmF0b3JfY29tbWlzc2lvbhpnZXRfb3BlcmF0b3Jfc3RvcmVfYWRkcmVzcxJnZXRfb3BlcmF0b3Jfc3RvcmUJbm90X2ZvdW5kHGlzX29wZXJhdG9yX3N0b3JlX3JlZ2lzdGVyZWQZaXNfdmFsaWRfY29tbWlzc2lvbl9yYXRlcxdyZWdpc3Rlcl9vcGVyYXRvcl9zdG9yZQ5hbHJlYWR5X2V4aXN0cxNjcmVhdGVfbmFtZWRfb2JqZWN0DkNvbnN0cnVjdG9yUmVmFWdlbmVyYXRlX3RyYW5zZmVyX3JlZgtUcmFuc2ZlclJlZhhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIPZ2VuZXJhdGVfc2lnbmVyGnVwZGF0ZV9vcGVyYXRvcl9jb21taXNzaW9uBWV2ZW50BGVtaXQDdmlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgICAfYUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjDzAgcBAAAAAAAAAB5FT1BFUkFUT1JfU1RPUkVfQUxSRUFEWV9FWElTVFMAAgAAAAAAAAAZRU9QRVJBVE9SX1NUT1JFX05PVF9GT1VORAADAAAAAAAAAB9FSU5WQUxJRF9DT01NSVNTSU9OX0NIQU5HRV9SQVRFAAQAAAAAAAAAGUVPVkVSX01BWF9DT01NSVNTSU9OX1JBVEUABQAAAAAAAAAORUlOVkFMSURfU1RBR0UABgAAAAAAAAAYRUlOVkFMSURfQ09NTUlTU0lPTl9SQVRFAAcAAAAAAAAADUVVTkFVVEhPUklaRUQAARVVcGRhdGVDb21taXNzaW9uRXZlbnQBBAAEEmdldF9vcGVyYXRvcl9zdG9yZQEBABdnZXRfb3BlcmF0b3JfY29tbWlzc2lvbgEBABpnZXRfb3BlcmF0b3Jfc3RvcmVfYWRkcmVzcwEBABxpc19vcGVyYXRvcl9zdG9yZV9yZWdpc3RlcmVkAQEAAAIEAgMDCAEGCAEHCAECAgQCAwMIAQYIAQcIAQMCBAoFCwMMAwcIAQAAAAABCgsAEQEHACEEBgUJBgcAAAAAAAAAEQInAgMAAAAGDQsAEQQRBQwBDgERBCUECQUMBgYAAAAAAAAAEQYnAgcAAAAKDAsACwERCAcADAIOAgwDDAQLAwsEEQkCCAAAAA4MBwEMAg0CDgA4ADgBDQIOATgCOAELAgIMAQABAAEHCwALARENKwAQABQCDgEAAQAQEwsACwERDSsADAIKAhABFAoCEAIUCgIQAxQLAhAAFBIBAg0BAAABDQsACwERBwwACgApAAQIBQsGAgAAAAAAAAARDycLAAIQAQAAAQULAAsBEQcpAAIRAAAABBEKABEDCwERAwoCEQMLAhEECwARBCUEDQUQBgQAAAAAAAAAEQYnAhIDAAAaNAoAEQALAQsCEQgKABEBDAgOCAwJDAoKCgwLCwkLCxEJKQADEwUYCwABBgEAAAAAAAAAERMnDgQOBQ4GERELAAsKERQMDA4MERUMDQ4NERYODBEXDA4LAwsECwULBhIADg4MAAwPCwALDy0AAhgDAAEAHl8LABEBDAQKBAoBEQ0qAAwFCgUQARQMBgoCCwYkBBEFFgsFAQYFAAAAAAAAABEGJwoFEAARBA4DEQQKBRADEQQKBRACEQQMBwwIDAkKCQsHJQwKDAsLCgQsBTELBQEGBAAAAAAAAAARBicKCwoJJAQ6CwsLCRcMBwU+CwkLCxcMBwsHCwglBEMFSAsFAQYDAAAAAAAAABEGJwoFDwAMDAoDCwwVCgUPAQwNCwILDRULBRABFAwCCwQLAQsCCwMSAjgDAgADAAAAAQACAC8A",
        "oRzrCwYAAAANAQAaAhoqA0SnAQTrARYFgQLGAQfHA4oGCNEJIAbxCVoQywrqAQq1DBMMyAzgAg2oDwYPrg8KAAAABAAIAAsADwATABYAGQAfACEAIwAmACwAAQgAAQMGAAEGBwEAAQIHCAADCgQCAwEAAQIOCwACEQAABRUHAAEwAgAADAABAAANAgMABAwFAQEIABAGBwABEggJAAIQCwcBCAUUDQ4ABhcPAwAAGBACAAcaAQ0AAxsSEwIDAgAcAQABBwAdAQ0BBwEeFgAACCACDgEACSIYDQEACiQaAgEAACUBAAEHCycBAQAAKAYBAAMpHB0CAwAAKgEeAQcAKx8CAQcMLSAAAAsuAQEAAS8hIgABMSMJAAEyIyQABDMFJQEIAzQCJgIDBAIEBQoKEQwVDhUPARAZCxUUERwEHREBBQEDAAELAgEIBQEIBQIFCwIBCQACBQMBCAYBBggBAQwBCAMDBgwLAgEJAAMCBggADAEKAgEIBwIFCAcDBQMDAgoCAwMHCwQCCQAJAQkACQEBBwkBAQcDAQkAAgYFCgIDBQYFCgIBBgkAAQICBwoJAAoJAAIKAgoCAwYLBAIJAAkBCQAGCQEBBgkBAQECBgwDAQYMAgYMCgIBCAgBBggIAQgBAQsCAQgDAQsEAgkACQEKBgwFBgUKAgoCBQgIDAsCAQgFCAAKdmlwX3Jld2FyZAtSZXdhcmRTdG9yZQpleHRlbmRfcmVmCUV4dGVuZFJlZgZvYmplY3QMcmV3YXJkX3N0b3JlBk9iamVjdA1GdW5naWJsZVN0b3JlDmZ1bmdpYmxlX2Fzc2V0EHJld2FyZF9wZXJfc3RhZ2UFVGFibGUFdGFibGUHYmFsYW5jZQ9yZXdhcmRfbWV0YWRhdGEITWV0YWRhdGEWcHJpbWFyeV9mdW5naWJsZV9zdG9yZQh3aXRoZHJhdw1GdW5naWJsZUFzc2V0HWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nBnN0cmluZwR1dGY4BlN0cmluZwRjb2luCG1ldGFkYXRhFGFkZF9yZXdhcmRfcGVyX3N0YWdlCXRhYmxlX2tleQplbmNvZGVfdTY0F2JvcnJvd19tdXRfd2l0aF9kZWZhdWx0G2NyZWF0ZV9yZXdhcmRfc3RvcmVfYWRkcmVzcxpnZW5lcmF0ZV9yZXdhcmRfc3RvcmVfc2VlZBVjcmVhdGVfb2JqZWN0X2FkZHJlc3MJdHlwZV9pbmZvCXR5cGVfbmFtZQNiY3MIdG9fYnl0ZXMGdmVjdG9yBmFwcGVuZBhnZXRfcmV3YXJkX3N0b3JlX2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kEGdldF9zdGFnZV9yZXdhcmQTYm9ycm93X3dpdGhfZGVmYXVsdBppc19yZXdhcmRfc3RvcmVfcmVnaXN0ZXJlZBVyZWdpc3Rlcl9yZXdhcmRfc3RvcmUGc2lnbmVyCmFkZHJlc3Nfb2YOYWxyZWFkeV9leGlzdHMTY3JlYXRlX25hbWVkX29iamVjdA5Db25zdHJ1Y3RvclJlZg9nZW5lcmF0ZV9zaWduZXITZ2VuZXJhdGVfZXh0ZW5kX3JlZhtlbnN1cmVfcHJpbWFyeV9zdG9yZV9leGlzdHMDbmV3C3ZpcF96YXBwaW5nC3ZpcF92ZXN0aW5nCXZpcF92YXVsdAN2aXAPdmlwX3dlaWdodF92b3RlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgIGBXVpbml0CgIiITB4MTo6dmlwX3Zlc3Rpbmc6Ok9wZXJhdG9yVmVzdGluZwoCAgHyCgICAfMUY29tcGlsYXRpb25fbWV0YWRhdGEbAQwyLjAtdW5zdGFibGUMMi4wLXVuc3RhYmxlE2luaXRpYTo6bWV0YWRhdGFfdjCjAQIBAAAAAAAAABxFUkVXQVJEX1NUT1JFX0FMUkVBRFlfRVhJU1RTAAIAAAAAAAAAF0VSRVdBUkRfU1RPUkVfTk9UX0ZPVU5EAAAEB2JhbGFuY2UBAQAQZ2V0X3N0YWdlX3Jld2FyZAEBABhnZXRfcmV3YXJkX3N0b3JlX2FkZHJlc3MBAQAaaXNfcmV3YXJkX3N0b3JlX3JlZ2lzdGVyZWQBAQAAAgMCCAEFCwIBCAMJCwQCCgIDAAEAAAMGEQEMAQsACwE4AAIDAwABAAwOCwArAAwCCgIQABEEDAMOAwsCEAEUCwE4AQIBAQAAAgUHAAcBEQYRBwIIAwABABQPCwAqAA8CCwERCQYAAAAAAAAAADgCDAMKAxQLAhYLAxUCCwAAABcLCwA4AwcADAEOAQwCDAMLAgsDEQ0CDAAAABsQOAQHAhEGIQQIBwMMAQUKBwQMAQ0BDgA4BTgGCwECEQEAAAAMCwA4BwwBCgEpAAQHBQoGAgAAAAAAAAAREicLAQITAQABAAELCwArABACCwERCQYAAAAAAAAAAAwCDgI4CBQCFQEAAAIECwA4BykAAhYDAAAnLgsBOAMKABEXDAMOAwwEDAUKBQwGCwQLBhENDAcKBykAAxIFFwsAAQYBAAAAAAAAABEYJwsACwURGQwIDggRGgwJDggRGxEBDAoLBwsKOAkOCQwAOAoSAAwLCwALCy0AAgAAAAEAAgA1ADYANwA4ADkA",
        "oRzrCwYAAAANAQAMAgwiAy5tBJsBIAW7Aa8CB+oDwQIIqwYgBssGIhDtBqEBCo4IIwyxCPkDDaoMBg+wDAIAAAAEAAwADgAVAB4AAQgAAQMEAgMBAAEABQQAAAgGAAQXBwEAAAEZAgIDAQABAAkAAQABCgEDAgMEAAsFAQACDQEGAAMPBwgAARAJCgIDAAERDAECAwABEg0OAgMAARMQBwIDAAAUEgcABBYBEwEAARgUFQIDAAEaFQoCAwABGxUWAgMAABwGBwAAHQYYAAUfBwcAASAJGgIDAAECBQIBCwYCBwIFCwEPBgsHCwgPBg8KCAsPDA8NDxEPAQYMAAIKAgsBAgoCCwECCgIIAgELAQIJAAkBAQgAAwMDAwIDAwEDAQoCAgYLAQIJAAkBCQABAQIKAgsBAgoCCAIDBwsBAgkACQEJAAkBAgcLAQIJAAkBCQABBwkBAgoCCAIBBgsBAgkACQEJBwgAAQMHCwECCgILAQIKAggCBwsBAgoCCwECCgIIAgsBAgoCCAIKAgcLAQIKAggCCAICCgIKAgELBAEJAAQGCwECCQAJAQsEAQkACwQBCQACAQYLBQIJAAkBAgkABgkBCQcIAAoCBwsBAgoCCwECCgIIAgcLAQIKAggCBgsFAgoCCAIDAwYLBQIKAggCAwEKCAMBCAMBBgkBCQcIAAcLAQIKAgsBAgoCCAIKAgcLAQIKAggCCggDBwoIAwYIAggDCggDD3ZpcF90dmxfbWFuYWdlcgtNb2R1bGVTdG9yZQthdmVyYWdlX3R2bAVUYWJsZQV0YWJsZQtUVkxTbmFwc2hvdAR0aW1lA3R2bBNUVkxTbmFwc2hvdFJlc3BvbnNlC2luaXRfbW9kdWxlA25ldwxhZGRfc25hcHNob3QFYmxvY2sOZ2V0X2Jsb2NrX2luZm8JdGFibGVfa2V5CmVuY29kZV91NjQIY29udGFpbnMDYWRkCmJvcnJvd19tdXQGbGVuZ3RoFWNhbGN1bGF0ZV9hdmVyYWdlX3R2bAZvcHRpb24Ebm9uZQZPcHRpb24EaXRlcglUYWJsZUl0ZXIHcHJlcGFyZQRuZXh0D2dldF9hdmVyYWdlX3R2bA1nZXRfc25hcHNob3RzBWVycm9yCW5vdF9mb3VuZAZib3Jyb3cDdmlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwWwIBAAAAAAAAAA5FSU5WQUxJRF9FUE9DSAACAAAAAAAAABJFSU5WQUxJRF9CUklER0VfSUQAAAINZ2V0X3NuYXBzaG90cwEBAA9nZXRfYXZlcmFnZV90dmwBAQAAAgECCwECCgILAQIKAgsBAgoCCAICAgIGAwcDAwICBgMHAwAAAAAEBzgAEgAMAQsACwEtAAICAwABABFDEQMHACoADAMKAxAACgARBDgBIAwEDAUBCwQEFgoDDwAKABEEOAI4AwUWCwMPAAsAEQQ4BAwGCgYuCgERBDgFAy4KBgwHCgERBDgGDAgMCQsHCwkLCDgHBS4LAREEDAkLBgsJOAgMCgoKLjgJCwULAhIBDAsRBAwJCwoLCQsLOAoCCQEAAQAXQAcAKgAMAgoCEAAKADgBAwwLAgEGAAAAAAAAAAACCwIPAAsAOAQMBAoELgoBOAUDGgsEAQYAAAAAAAAAAAILBAsBOAgMBQoFLjgJCwUuOAs4CzEBOAwMBgYAAAAAAAAAAAwHDAgKBjgNAzELBgEFPAoGOA4QARQMCgsHCwoWDAcBBSsLBwsIGgIOAQABAAEGCwARBAsBEQQRCQIPAQABABtPBwAqAAwCCgIQAAoAEQQ4AQMRBQsFEAsCAQYBAAAAAAAAABEQJwURCwIPAAsAEQQ4BAwDCgMuCgERBDgFAyUFHwUkCwMBBgIAAAAAAAAAERAnBSULAREEDAQLAwsEOAgMBQoFLjgJQBkAAAAAAAAAAAwGDAAGAAAAAAAAAAAKACYEOQsFAQVNCgUuBgAAAAAAAAAAEQQ4Dw0GDAcMCAoIEAIUCwgQARQSAgwJCwcLCUQZBTILBgIAAAEBAQAAIQA=",
        "oRzrCwYAAAANAQAOAg4eAyxyBJ4BCAWmAYgBB64CugQI6AYgBogHJxCvB9QBCoMJDAyPCakDDbgMCA/ADAIAAAAEAAoAEgAWABcAGQABCAABAwYAAQ4CAAEUBwEAAQQVCwAEHwAABCMIAAAIAAEAAAkBAgACCwADAAEMBAMAAQ0FBgABDwcIAAAQAQoAABEBAwADEwELAAUQDQoBCAAYDgEABhoKCgAFGw8BAQgAHAABAAYdCgoAAAYBCgAAHgoRAAYgCgoAASESEwAFIg0UAQgEJBYRAQgAJQ4BAAkMDAwTDBQVAQYMAAEKAgEFAgYFCgICBgwKAgEIAgEGCAIBCAELBgwFBgUKAgoCCAIDAwgBBQgAAQMBCwMBCAQBCAQCBQsDAQkAAgYMAwQGDAsDAQkABQMEAwEFCwMBCAQBCAUBBggBAQwBCwMBCAYBCAYDBgwLAwEJAAMFBwgAAwwGDAsDAQgGAwcIAAMHAwl2aXBfdmF1bHQLTW9kdWxlU3RvcmUKZXh0ZW5kX3JlZglFeHRlbmRSZWYGb2JqZWN0D2NsYWltYWJsZV9zdGFnZRByZXdhcmRfcGVyX3N0YWdlEHZhdWx0X3N0b3JlX2FkZHILaW5pdF9tb2R1bGUZZ2VuZXJhdGVfdmF1bHRfc3RvcmVfc2VlZAZzaWduZXIKYWRkcmVzc19vZhVjcmVhdGVfb2JqZWN0X2FkZHJlc3MTY3JlYXRlX25hbWVkX29iamVjdA5Db25zdHJ1Y3RvclJlZhNnZW5lcmF0ZV9leHRlbmRfcmVmB2JhbGFuY2UXZ2V0X3ZhdWx0X3N0b3JlX2FkZHJlc3MKdmlwX3Jld2FyZA9yZXdhcmRfbWV0YWRhdGEGT2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0FnByaW1hcnlfZnVuZ2libGVfc3RvcmUHZGVwb3NpdAVlcnJvchBpbnZhbGlkX2FyZ3VtZW50CHRyYW5zZmVyFmNoZWNrX2NoYWluX3Blcm1pc3Npb24RcGVybWlzc2lvbl9kZW5pZWQFY2xhaW0NRnVuZ2libGVBc3NldA1pbnZhbGlkX3N0YXRlHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nG2Vuc3VyZV9wcmltYXJ5X3N0b3JlX2V4aXN0cw1GdW5naWJsZVN0b3JlCHdpdGhkcmF3F3VwZGF0ZV9yZXdhcmRfcGVyX3N0YWdlA3ZpcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoCAgHxFGNvbXBpbGF0aW9uX21ldGFkYXRhGwEMMi4wLXVuc3RhYmxlDDIuMC11bnN0YWJsZRNpbml0aWE6Om1ldGFkYXRhX3YwjQEEAQAAAAAAAAAPRUlOVkFMSURfQU1PVU5UAAIAAAAAAAAADkVJTlZBTElEX1NUQUdFAAMAAAAAAAAADUVVTkFVVEhPUklaRUQABAAAAAAAAAAZRUlOVkFMSURfUkVXQVJEX1BFUl9TVEFHRQAAAgdiYWxhbmNlAQEAEHJld2FyZF9wZXJfc3RhZ2UBAQAAAgQCCAEFAwYDBwUAAAAACSIRAQoAEQIMAg4CDAMMBAoEDAULAwsFEQMKAAsEEQQMBg4GEQUGAQAAAAAAAAAGAAAAAAAAAAAMBwwIDAkMCgsJCwgLBwsKEgAMCwsACwstAAIGAQABAAEEEQcRCDgAAgoBBAEAEBYRBwoBBgAAAAAAAAAAJAwDDAQLAwQJBQ4LAAEGAQAAAAAAAAARCycRCAwFCwALBQsECwE4AQINAAAAAQoLABECBwAhBAYFCQYDAAAAAAAAABEOJwIPAQABAAEFBwArABAAFAIQAwABABc4BwAqAAwBCgEQARQMAgoACwIhBAwFEQsBAQYCAAAAAAAAABELJwoBEAAUBgAAAAAAAAAAJAQYBR0LAQEGBAAAAAAAAAAREScLAAYBAAAAAAAAABYKAQ8BFQoBEAIREgwDCgEQAxQRCDgCDgMLARAAFAwADAQMBQsECwULADgDAgEAAAABAgcBAgcDAAEAAQUHACsAEAMUAhUBBAEAGBYLABENBwAqAAwCCgEGAAAAAAAAAAAkBAoFDwsCAQYEAAAAAAAAABELJwsCDwAMBAsBCwQVAgACAAEAAAADACYA",
        "",
        "",
        "oRzrCwYAAAANAQAeAh5sA4oBtQIEvwMkBeMD6wQHzginDAj1FCAGlRUiELcV4AMKlxnNAQzkGsUMDaknHA/FJwIAAAAEAAgAFAAYABwAKAA5ADsARgBIAFEAWABbAGIAAQgAAQMGAAIHBAIDAQABAAkEAAALBgAADgYAABEGAAMTBwAAFgIABBcCAAAZCAAFGwcCAAAAAAAdBgAAIAYAASYHAQABBicLAAQqBAAAKwYAAC0GAAAyAgABNQIABkIAAAxXBwEAAA1aCAAAMwABAAE0AgMAATYEBQACNwEHAgMEADgAAQAHOgAJAAg8CgoAAD0LAQAIPgoKAAU/DQ4CBAQCQA8QAgMABEEREgAGQxMUAAFEFgkBCAZFEwoACUcYAQECCkkZAQAASgABAAhLCgoABUwBGwIEBABNHQEAAE4dAQAATwsBAABQHyAAC1IBIQAIUwoKAARUIiMABFUkCgAAVicBAAhZCgoAAVwpKgIICA1dKywAAF4tCgAAXwswAARgMRIABmEyAQAOSRkBAABjNDUABGQ2NwACZTgOAgMAAmY5AQIDAABnJDwABGgkPQAEaSQKAABqPwEABWZAAQIEBABrCjwAAmw4QwIDAABtRUYAAG4KSAAAb0oKAARwCQ4ABEoAAQANcUwSAAByCwEAAnMPTgIDAAVzT1ACBAQDBgkMCgYNFQ8XEwwPJR4oDy4nBigGDzotDA9BLwY3BjgMD1EBBgwAAgUBAQgUAQYIFAEIAQIDCAMBCwICCQAJAQIIFAgAAQUBAwIGDAMCAwECBgsLAgkACQEGCQABAQIHCwICCQAJAQkAAQcJAQEHCBABCBUBBggVAQsOAQgPAQgPAQYLDgEJAAEIDQEJAAIFCBUGBQgVAwsOAQgPAwUBCwsCCQAJAQIGDAgKAgYMCgMGBgoDBgoDAwMGDAMCCAMDAggQCBUCAwMBBggQAQgJAQYICQEIEQsBCBUDCBAICQsOAQgPAwMFCBAIFQgGDAMLDgEIDwsWAQMIBwMIFQgVAggPCBcBCw4BCQABCw4BCQEBCw4BCBcCCw4BCA8LDgEIDwsGDAMIFQgVCw4BCBcLFgEDCAcDAwsOAQgPCw4BCA8BCBINAQsOAQgPCw4BCA8DAwMLDgEIFwsOAQgXCw4BCA8IFQgVBgwIBwEIAwIFCBACBwgVCBUGBgwIFQgQBQcIFQgVCAMFCAcDAwgVCw4BCA8LDgEIDwMDAwgJAggHCBUBCBACBgsCAgkACQEJAAMHCwICCQAJAQkACQEBCAwNAwMLDgEIDwgHBwgABgsCAgMIAwMBCBAFAwgDCAkBCAUBCAcEBggJAwMIBwUFAwMDCAkDBwsLAgkACQEJAAkBAQgEAwEHCwsCAwEIBQEGCQECBggACAkBCgMBCggFCQoIBQYKAwYKAwMDBwoIBQgFAwoIBQEIEwIGCAAGCAMIBgwDCBUIBwMDCw4BCA8LDgEIDwMGDAUICQQLDgEIFwgVCBULFgEDAQcDAQkBAgcLCwIJAAkBBgkAAgkACQEBCAYJBQcICggDCAkDAwMIBQgDC3ZpcF96YXBwaW5nC01vZHVsZVN0b3JlCmV4dGVuZF9yZWYJRXh0ZW5kUmVmBm9iamVjdAtsb2NrX3BlcmlvZAh6YXBwaW5ncwVUYWJsZQV0YWJsZQdaYXBwaW5nA3ppZAxEZXBvc2l0RXZlbnQEYWRkcgpkZWxlZ2F0aW9uDkRlbGVnYXRpb25JbmZvDHJlbGVhc2VfdGltZQVzaGFyZQ1XaXRoZHJhd0V2ZW50CXZhbGlkYXRvcgZTdHJpbmcGc3RyaW5nEHVuY2xhaW1lZF9yZXdhcmQPTFNFbnRyeVJlc3BvbnNlEkRlbGVnYXRpb25SZXNwb25zZQdzdGFraW5nB0xTU3RvcmUHZW50cmllcwlTaW1wbGVNYXAKc2ltcGxlX21hcAlMb2NrRXZlbnQNY29pbl9tZXRhZGF0YQtib25kX2Ftb3VudBBSZXdhcmRDbGFpbUV2ZW50DXJld2FyZF9hbW91bnQJYnJpZGdlX2lkBnphcHBlcgVzdGFnZQ9lc2luaXRfbWV0YWRhdGEGT2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0FHN0YWtlbGlzdGVkX21ldGFkYXRhCkRlbGVnYXRpb24RWmFwcGluZ0NsYWltRXZlbnQYZGVsZWdhdGlvbl9yZXdhcmRfYW1vdW50DFphcHBpbmdFdmVudAdhY2NvdW50C2xwX21ldGFkYXRhDnphcHBpbmdfYW1vdW50EnN0YWtlbGlzdGVkX2Ftb3VudA9aYXBwaW5nUmVzcG9uc2ULaW5pdF9tb2R1bGUNY3JlYXRlX29iamVjdA5Db25zdHJ1Y3RvclJlZhNnZW5lcmF0ZV9leHRlbmRfcmVmA25ldxZjaGVja19jaGFpbl9wZXJtaXNzaW9uBnNpZ25lcgphZGRyZXNzX29mBWVycm9yEXBlcm1pc3Npb25fZGVuaWVkE2NsYWltX3Jld2FyZF9zY3JpcHQJbm90X2ZvdW5kDGNvbnRhaW5zX2tleQpib3Jyb3dfbXV0DGNsYWltX3Jld2FyZA1GdW5naWJsZUFzc2V0DmFzc2V0X21ldGFkYXRhDm9iamVjdF9hZGRyZXNzBmFtb3VudAVldmVudARlbWl0BGNvaW4HZGVwb3NpdAhyZWdpc3Rlcg5hbHJlYWR5X2V4aXN0cwZjcmVhdGUZYmF0Y2hfY2xhaW1fcmV3YXJkX3NjcmlwdBpiYXRjaF9jbGFpbV96YXBwaW5nX3NjcmlwdBRjbGFpbV96YXBwaW5nX3NjcmlwdAVjbGFpbQVibG9jaw5nZXRfYmxvY2tfaW5mbwt1bmF2YWlsYWJsZSdnZXRfZGVsZWdhdGlvbl9yZXNwb25zZV9mcm9tX2RlbGVnYXRpb24tZ2V0X3VuY2xhaW1lZF9yZXdhcmRfZnJvbV9kZWxlZ2F0aW9uX3Jlc3BvbnNlB3phcHBpbmcGT3B0aW9uBm9wdGlvbhBpbnZhbGlkX2FyZ3VtZW50BkNvbmZpZwNkZXgHY29udmVydA1wb29sX21ldGFkYXRhEnByb3ZpZGVfbG9ja19zdGFrZRB3aXRoZHJhd196YXBwaW5nEmRlcG9zaXRfZGVsZWdhdGlvbgVtZXJnZRZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlF2NyZWF0ZV9sb2NrX3N0YWtlX2VudHJ5CGRlbGVnYXRlCGNvbnRhaW5zA2FkZCFkZWxlZ2F0aW9uX3Jlc190b19kZWxlZ2F0aW9uX2luZm8mZ2V0X3ZhbGlkYXRvcl9mcm9tX2RlbGVnYXRpb25fcmVzcG9uc2UiZ2V0X3NoYXJlX2Zyb21fZGVsZWdhdGlvbl9yZXNwb25zZRhkZXBvc2l0X2xvY2tfc3Rha2VfZW50cnkTZ2V0X2RlbGVnYXRpb25faW5mbwZib3Jyb3cUZ2V0X2RlbGVnYXRpb25faW5mb3MLZ2V0X3phcHBpbmcKbG9ja19zdGFrZRVpc19hY2NvdW50X3JlZ2lzdGVyZWQRcHJvdmlkZV9saXF1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"
      ],
      "modules": [],
      "resources": [],
      "table_infos": [],
      "table_entries": [],
      "dex_pairs": []
    },
    "mstaking": {
      "params": {
        "unbonding_time": "1814400s",
        "max_validators": 100,
        "max_entries": 7,
        "historical_entries": 10000,
        "bond_denoms": [
          "uinit"
        ],
        "min_voting_power": "1000000",
        "min_commission_rate": "0.000000000000000000"
      },
      "last_validator_powers": [],
      "validators": [],
      "delegations": [],
      "unbonding_delegations": [],
      "redelegations": [],
      "exported": false,
      "next_unbonding_id": "1"
    },
    "nonfungibletokentransfer": {
      "port_id": "nft-transfer",
      "class_traces": [],
      "class_data": [],
      "token_data": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      }
    },
    "ophost": {
      "params": {
        "registration_fee": []
      },
      "bridges": [],
      "next_bridge_id": "1"
    },
    "oracle": {
      "currency_pair_genesis": [
        {
          "currency_pair": {
            "Base": "TIMESTAMP",
            "Quote": "NANOSECOND"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "0"
        },
        {
          "currency_pair": {
            "Base": "BNB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "1"
        },
        {
          "currency_pair": {
            "Base": "BTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "2"
        },
        {
          "currency_pair": {
            "Base": "DOGE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "3"
        },
        {
          "currency_pair": {
            "Base": "EOS",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "4"
        },
        {
          "currency_pair": {
            "Base": "ICP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "5"
        },
        {
          "currency_pair": {
            "Base": "NTRN",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "6"
        },
        {
          "currency_pair": {
            "Base": "PEPE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "7"
        },
        {
          "currency_pair": {
            "Base": "SHIB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "8"
        },
        {
          "currency_pair": {
            "Base": "PYTH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "9"
        },
        {
          "currency_pair": {
            "Base": "RNDR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "10"
        },
        {
          "currency_pair": {
            "Base": "STRK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "11"
        },
        {
          "currency_pair": {
            "Base": "ALGO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "12"
        },
        {
          "currency_pair": {
            "Base": "BCH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "13"
        },
        {
          "currency_pair": {
            "Base": "DYDX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "14"
        },
        {
          "currency_pair": {
            "Base": "HBAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "15"
        },
        {
          "currency_pair": {
            "Base": "OP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "16"
        },
        {
          "currency_pair": {
            "Base": "ORDI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "17"
        },
        {
          "currency_pair": {
            "Base": "TRX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "18"
        },
        {
          "currency_pair": {
            "Base": "AAVE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "19"
        },
        {
          "currency_pair": {
            "Base": "BLUR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "20"
        },
        {
          "currency_pair": {
            "Base": "UNI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "21"
        },
        {
          "currency_pair": {
            "Base": "ARKM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "22"
        },
        {
          "currency_pair": {
            "Base": "JUP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "23"
        },
        {
          "currency_pair": {
            "Base": "LDO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "24"
        },
        {
          "currency_pair": {
            "Base": "WLD",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "25"
        },
        {
          "currency_pair": {
            "Base": "DYM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "26"
        },
        {
          "currency_pair": {
            "Base": "COMP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "27"
        },
        {
          "currency_pair": {
            "Base": "DOT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "28"
        },
        {
          "currency_pair": {
            "Base": "ETC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "29"
        },
        {
          "currency_pair": {
            "Base": "LINK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "30"
        },
        {
          "currency_pair": {
            "Base": "USDT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "31"
        },
        {
          "currency_pair": {
            "Base": "AVAX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "32"
        },
        {
          "currency_pair": {
            "Base": "BONK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "33"
        },
        {
          "currency_pair": {
            "Base": "CRV",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "34"
        },
        {
          "currency_pair": {
            "Base": "IMX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "35"
        },
        {
          "currency_pair": {
            "Base": "SEI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "36"
        },
        {
          "currency_pair": {
            "Base": "SUI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "37"
        },
        {
          "currency_pair": {
            "Base": "GRT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "38"
        },
        {
          "currency_pair": {
            "Base": "MATIC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "39"
        },
        {
          "currency_pair": {
            "Base": "FET",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "40"
        },
        {
          "currency_pair": {
            "Base": "LTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "41"
        },
        {
          "currency_pair": {
            "Base": "APE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "42"
        },
        {
          "currency_pair": {
            "Base": "JTO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "43"
        },
        {
          "currency_pair": {
            "Base": "SNX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "44"
        },
        {
          "currency_pair": {
            "Base": "SOL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "45"
        },
        {
          "currency_pair": {
            "Base": "AEVO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "46"
        },
        {
          "currency_pair": {
            "Base": "AGIX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "47"
        },
        {
          "currency_pair": {
            "Base": "FIL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "48"
        },
        {
          "currency_pair": {
            "Base": "INJ",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "49"
        },
        {
          "currency_pair": {
            "Base": "TIA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "50"
        },
        {
          "currency_pair": {
            "Base": "WOO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "51"
        },
        {
          "currency_pair": {
            "Base": "APT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "52"
        },
        {
          "currency_pair": {
            "Base": "ARB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "53"
        },
        {
          "currency_pair": {
            "Base": "ATOM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "54"
        },
        {
          "currency_pair": {
            "Base": "MKR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "55"
        },
        {
          "currency_pair": {
            "Base": "STX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "56"
        },
        {
          "currency_pair": {
            "Base": "XRP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "57"
        },
        {
          "currency_pair": {
            "Base": "ASTR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "58"
        },
        {
          "currency_pair": {
            "Base": "ETH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "59"
        },
        {
          "currency_pair": {
            "Base": "MANA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "60"
        },
        {
          "currency_pair": {
            "Base": "AXL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "61"
        },
        {
          "currency_pair": {
            "Base": "NEAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "62"
        },
        {
          "currency_pair": {
            "Base": "XLM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "63"
        },
        {
          "currency_pair": {
            "Base": "ADA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "64"
        },
        {
          "currency_pair": {
            "Base": "RUNE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "65"
        }
      ],
      "next_id": "66"
    },
    "packetfowardmiddleware": {
      "params": {
        "fee_percentage": "0.000000000000000000"
      },
      "in_flight_packets": {}
    },
    "permissionedchannelrelayer": {
      "permissioned_relayers": []
    },
    "ratelimit": {
      "params": {},
      "rate_limits": [],
      "whitelisted_address_pairs": [],
      "blacklisted_denoms": [],
      "pending_send_packet_sequence_numbers": [],
      "hour_epoch": {
        "epoch_number": "0",
        "duration": "3600s",
        "epoch_start_time": "0001-01-01T00:00:00Z",
        "epoch_start_height": "0"
      }
    },
    "reward": {
      "params": {
        "reward_denom": "uinit",
        "dilution_period": "31536000s",
        "release_rate": "0.070000000000000000",
        "dilution_rate": "0.500000000000000000",
        "release_enabled": false
      },
      "last_release_timestamp": "2024-08-16T06:10:22.259993Z",
      "last_dilution_timestamp": "2024-08-16T06:10:22.259993Z"
    },
    "slashing": {
      "params": {
        "signed_blocks_window": "100",
        "min_signed_per_window": "0.500000000000000000",
        "downtime_jail_duration": "600s",
        "slash_fraction_double_sign": "0.050000000000000000",
        "slash_fraction_downtime": "0.010000000000000000"
      },
      "signing_infos": [],
      "missed_blocks": []
    },
    "transfer": {
      "port_id": "transfer",
      "denom_traces": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      },
      "total_escrowed": []
    },
    "upgrade": {}
  },
  "consensus": {
    "params": {
      "block": {
        "max_bytes": "22020096",
        "max_gas": "-1"
      },
      "evidence": {
        "max_age_num_blocks": "100000",
        "max_age_duration": "172800000000000",
        "max_bytes": "1048576"
      },
      "validator": {
        "pub_key_types": [
          "ed25519"
        ]
      },
      "version": {
        "app": "0"
      },
      "abci": {
        "vote_extensions_enable_height": "1"
      }
    }
  }
}